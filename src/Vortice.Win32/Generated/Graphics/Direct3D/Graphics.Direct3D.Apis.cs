// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

namespace Win32.Graphics.Direct3D;

public static partial class Apis
{
	public const uint D3D_FL9_1_REQ_TEXTURE1D_U_DIMENSION = 2048;

	public const uint D3D_FL9_3_REQ_TEXTURE1D_U_DIMENSION = 4096;

	public const uint D3D_FL9_1_REQ_TEXTURE2D_U_OR_V_DIMENSION = 2048;

	public const uint D3D_FL9_3_REQ_TEXTURE2D_U_OR_V_DIMENSION = 4096;

	public const uint D3D_FL9_1_REQ_TEXTURECUBE_DIMENSION = 512;

	public const uint D3D_FL9_3_REQ_TEXTURECUBE_DIMENSION = 4096;

	public const uint D3D_FL9_1_REQ_TEXTURE3D_U_V_OR_W_DIMENSION = 256;

	public const uint D3D_FL9_1_DEFAULT_MAX_ANISOTROPY = 2;

	public const uint D3D_FL9_1_IA_PRIMITIVE_MAX_COUNT = 65535;

	public const uint D3D_FL9_2_IA_PRIMITIVE_MAX_COUNT = 1048575;

	public const uint D3D_FL9_1_SIMULTANEOUS_RENDER_TARGET_COUNT = 1;

	public const uint D3D_FL9_3_SIMULTANEOUS_RENDER_TARGET_COUNT = 4;

	public const uint D3D_FL9_1_MAX_TEXTURE_REPEAT = 128;

	public const uint D3D_FL9_2_MAX_TEXTURE_REPEAT = 2048;

	public const uint D3D_FL9_3_MAX_TEXTURE_REPEAT = 8192;

	public const uint D3D_SHADER_FEATURE_DOUBLES = 1;

	public const uint D3D_SHADER_FEATURE_COMPUTE_SHADERS_PLUS_RAW_AND_STRUCTURED_BUFFERS_VIA_SHADER_4_X = 2;

	public const uint D3D_SHADER_FEATURE_UAVS_AT_EVERY_STAGE = 4;

	public const uint D3D_SHADER_FEATURE_64_UAVS = 8;

	public const uint D3D_SHADER_FEATURE_MINIMUM_PRECISION = 16;

	public const uint D3D_SHADER_FEATURE_11_1_DOUBLE_EXTENSIONS = 32;

	public const uint D3D_SHADER_FEATURE_11_1_SHADER_EXTENSIONS = 64;

	public const uint D3D_SHADER_FEATURE_LEVEL_9_COMPARISON_FILTERING = 128;

	public const uint D3D_SHADER_FEATURE_TILED_RESOURCES = 256;

	public const uint D3D_SHADER_FEATURE_STENCIL_REF = 512;

	public const uint D3D_SHADER_FEATURE_INNER_COVERAGE = 1024;

	public const uint D3D_SHADER_FEATURE_TYPED_UAV_LOAD_ADDITIONAL_FORMATS = 2048;

	public const uint D3D_SHADER_FEATURE_ROVS = 4096;

	public const uint D3D_SHADER_FEATURE_VIEWPORT_AND_RT_ARRAY_INDEX_FROM_ANY_SHADER_FEEDING_RASTERIZER = 8192;

	public const uint D3D_SHADER_FEATURE_WAVE_OPS = 16384;

	public const uint D3D_SHADER_FEATURE_INT64_OPS = 32768;

	public const uint D3D_SHADER_FEATURE_VIEW_ID = 65536;

	public const uint D3D_SHADER_FEATURE_BARYCENTRICS = 131072;

	public const uint D3D_SHADER_FEATURE_NATIVE_16BIT_OPS = 262144;

	public const uint D3D_SHADER_FEATURE_SHADING_RATE = 524288;

	public const uint D3D_SHADER_FEATURE_RAYTRACING_TIER_1_1 = 1048576;

	public const uint D3D_SHADER_FEATURE_SAMPLER_FEEDBACK = 2097152;

	public const uint D3D_SHADER_FEATURE_ATOMIC_INT64_ON_TYPED_RESOURCE = 4194304;

	public const uint D3D_SHADER_FEATURE_ATOMIC_INT64_ON_GROUP_SHARED = 8388608;

	public const uint D3D_SHADER_FEATURE_DERIVATIVES_IN_MESH_AND_AMPLIFICATION_SHADERS = 16777216;

	public const uint D3D_SHADER_FEATURE_RESOURCE_DESCRIPTOR_HEAP_INDEXING = 33554432;

	public const uint D3D_SHADER_FEATURE_SAMPLER_DESCRIPTOR_HEAP_INDEXING = 67108864;

	public const uint D3D_SHADER_FEATURE_WAVE_MMA = 134217728;

	public const uint D3D_SHADER_FEATURE_ATOMIC_INT64_ON_DESCRIPTOR_HEAP_RESOURCE = 268435456;

	public const uint D3D_SHADER_FEATURE_ADVANCED_TEXTURE_OPS = 536870912;

	public const uint D3D_SHADER_FEATURE_WRITEABLE_MSAA_TEXTURES = 1073741824;

	public const uint D3D_SHADER_FEATURE_SAMPLE_CMP_GRADIENT_OR_BIAS = 2147483648;

	public static ref readonly Guid WKPDID_D3DDebugObjectName
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			ReadOnlySpan<byte> data = new byte[] {
				0x22, 0x8C, 0x9B, 0x42,
				0x88, 0x91,
				0x0C, 0x4B,
				0x87,
				0x42,
				0xAC,
				0xB0,
				0xBF,
				0x85,
				0xC2,
				0x00
			};

			Debug.Assert(data.Length == Unsafe.SizeOf<Guid>());
			return ref Unsafe.As<byte, Guid>(ref MemoryMarshal.GetReference(data));
		}
	}

	public static ref readonly Guid WKPDID_D3DDebugObjectNameW
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			ReadOnlySpan<byte> data = new byte[] {
				0xD8, 0x5F, 0xCA, 0x4C,
				0x1F, 0x92,
				0xC8, 0x42,
				0x85,
				0x66,
				0x70,
				0xCA,
				0xF2,
				0xA9,
				0xB7,
				0x41
			};

			Debug.Assert(data.Length == Unsafe.SizeOf<Guid>());
			return ref Unsafe.As<byte, Guid>(ref MemoryMarshal.GetReference(data));
		}
	}

	public static ref readonly Guid WKPDID_CommentStringW
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			ReadOnlySpan<byte> data = new byte[] {
				0xC0, 0x9D, 0x14, 0xD0,
				0xE8, 0x90,
				0xC8, 0x4E,
				0x81,
				0x44,
				0xE9,
				0x00,
				0xAD,
				0x26,
				0x6B,
				0xB2
			};

			Debug.Assert(data.Length == Unsafe.SizeOf<Guid>());
			return ref Unsafe.As<byte, Guid>(ref MemoryMarshal.GetReference(data));
		}
	}

	public static ref readonly Guid WKPDID_D3D12UniqueObjectId
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			ReadOnlySpan<byte> data = new byte[] {
				0x15, 0xDE, 0x39, 0x1B,
				0x04, 0xEC,
				0xAE, 0x4B,
				0xBA,
				0x4D,
				0x8C,
				0xEF,
				0x79,
				0xFC,
				0x04,
				0xC1
			};

			Debug.Assert(data.Length == Unsafe.SizeOf<Guid>());
			return ref Unsafe.As<byte, Guid>(ref MemoryMarshal.GetReference(data));
		}
	}

	public const uint D3D_COMPONENT_MASK_X = 1;

	public const uint D3D_COMPONENT_MASK_Y = 2;

	public const uint D3D_COMPONENT_MASK_Z = 4;

	public const uint D3D_COMPONENT_MASK_W = 8;

	public static ref readonly Guid D3D_TEXTURE_LAYOUT_ROW_MAJOR
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			ReadOnlySpan<byte> data = new byte[] {
				0x4F, 0x23, 0xDC, 0xB5,
				0xBB, 0x72,
				0xEC, 0x4B,
				0x97,
				0x05,
				0x8C,
				0xF2,
				0x58,
				0xDF,
				0x6B,
				0x6C
			};

			Debug.Assert(data.Length == Unsafe.SizeOf<Guid>());
			return ref Unsafe.As<byte, Guid>(ref MemoryMarshal.GetReference(data));
		}
	}

	public static ref readonly Guid D3D_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			ReadOnlySpan<byte> data = new byte[] {
				0xE3, 0x29, 0x0F, 0x4C,
				0x5F, 0x3F,
				0x35, 0x4D,
				0x84,
				0xC9,
				0xBC,
				0x09,
				0x83,
				0xB6,
				0x2C,
				0x28
			};

			Debug.Assert(data.Length == Unsafe.SizeOf<Guid>());
			return ref Unsafe.As<byte, Guid>(ref MemoryMarshal.GetReference(data));
		}
	}

	public const DriverType D3D_DRIVER_TYPE_UNKNOWN = DriverType.Unknown;
	public const DriverType D3D_DRIVER_TYPE_HARDWARE = DriverType.Hardware;
	public const DriverType D3D_DRIVER_TYPE_REFERENCE = DriverType.Reference;
	public const DriverType D3D_DRIVER_TYPE_NULL = DriverType.Null;
	public const DriverType D3D_DRIVER_TYPE_SOFTWARE = DriverType.Software;
	public const DriverType D3D_DRIVER_TYPE_WARP = DriverType.Warp;
	public const FeatureLevel D3D_FEATURE_LEVEL_1_0_GENERIC = FeatureLevel.Level_1_0_Generic;
	public const FeatureLevel D3D_FEATURE_LEVEL_1_0_CORE = FeatureLevel.Level_1_0_Core;
	public const FeatureLevel D3D_FEATURE_LEVEL_9_1 = FeatureLevel.Level_9_1;
	public const FeatureLevel D3D_FEATURE_LEVEL_9_2 = FeatureLevel.Level_9_2;
	public const FeatureLevel D3D_FEATURE_LEVEL_9_3 = FeatureLevel.Level_9_3;
	public const FeatureLevel D3D_FEATURE_LEVEL_10_0 = FeatureLevel.Level_10_0;
	public const FeatureLevel D3D_FEATURE_LEVEL_10_1 = FeatureLevel.Level_10_1;
	public const FeatureLevel D3D_FEATURE_LEVEL_11_0 = FeatureLevel.Level_11_0;
	public const FeatureLevel D3D_FEATURE_LEVEL_11_1 = FeatureLevel.Level_11_1;
	public const FeatureLevel D3D_FEATURE_LEVEL_12_0 = FeatureLevel.Level_12_0;
	public const FeatureLevel D3D_FEATURE_LEVEL_12_1 = FeatureLevel.Level_12_1;
	public const FeatureLevel D3D_FEATURE_LEVEL_12_2 = FeatureLevel.Level_12_2;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_UNDEFINED = PrimitiveTopology.Undefined;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_POINTLIST = PrimitiveTopology.PointList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_LINELIST = PrimitiveTopology.LineList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_LINESTRIP = PrimitiveTopology.LineStrip;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST = PrimitiveTopology.TriangleList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP = PrimitiveTopology.TriangleStrip;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_TRIANGLEFAN = PrimitiveTopology.Trianglefan;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ = PrimitiveTopology.LineListAdj;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ = PrimitiveTopology.LineStripAdj;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ = PrimitiveTopology.TriangleListAdj;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ = PrimitiveTopology.TriangleStripAdj;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P1ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P2ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P3ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P4ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P5ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P6ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P7ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P8ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P9ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P10ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P11ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P12ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P13ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P14ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P15ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P16ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P17ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P18ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P19ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P20ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P21ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P22ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P23ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P24ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P25ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P26ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P27ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P28ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P29ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P30ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P31ControlPointPatchList;
	public const PrimitiveTopology D3D_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST = PrimitiveTopology.P32ControlPointPatchList;
	public const Primitive D3D_PRIMITIVE_UNDEFINED = Primitive.Undefined;
	public const Primitive D3D_PRIMITIVE_POINT = Primitive.Point;
	public const Primitive D3D_PRIMITIVE_LINE = Primitive.Line;
	public const Primitive D3D_PRIMITIVE_TRIANGLE = Primitive.Triangle;
	public const Primitive D3D_PRIMITIVE_LINE_ADJ = Primitive.LineAdj;
	public const Primitive D3D_PRIMITIVE_TRIANGLE_ADJ = Primitive.TriangleAdj;
	public const Primitive D3D_PRIMITIVE_1_CONTROL_POINT_PATCH = Primitive.P1ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_2_CONTROL_POINT_PATCH = Primitive.P2ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_3_CONTROL_POINT_PATCH = Primitive.P3ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_4_CONTROL_POINT_PATCH = Primitive.P4ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_5_CONTROL_POINT_PATCH = Primitive.P5ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_6_CONTROL_POINT_PATCH = Primitive.P6ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_7_CONTROL_POINT_PATCH = Primitive.P7ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_8_CONTROL_POINT_PATCH = Primitive.P8ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_9_CONTROL_POINT_PATCH = Primitive.P9ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_10_CONTROL_POINT_PATCH = Primitive.P10ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_11_CONTROL_POINT_PATCH = Primitive.P11ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_12_CONTROL_POINT_PATCH = Primitive.P12ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_13_CONTROL_POINT_PATCH = Primitive.P13ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_14_CONTROL_POINT_PATCH = Primitive.P14ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_15_CONTROL_POINT_PATCH = Primitive.P15ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_16_CONTROL_POINT_PATCH = Primitive.P16ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_17_CONTROL_POINT_PATCH = Primitive.P17ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_18_CONTROL_POINT_PATCH = Primitive.P18ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_19_CONTROL_POINT_PATCH = Primitive.P19ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_20_CONTROL_POINT_PATCH = Primitive.P20ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_21_CONTROL_POINT_PATCH = Primitive.P21ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_22_CONTROL_POINT_PATCH = Primitive.P22ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_23_CONTROL_POINT_PATCH = Primitive.P23ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_24_CONTROL_POINT_PATCH = Primitive.P24ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_25_CONTROL_POINT_PATCH = Primitive.P25ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_26_CONTROL_POINT_PATCH = Primitive.P26ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_27_CONTROL_POINT_PATCH = Primitive.P27ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_28_CONTROL_POINT_PATCH = Primitive.P28ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_29_CONTROL_POINT_PATCH = Primitive.P29ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_30_CONTROL_POINT_PATCH = Primitive.P30ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_31_CONTROL_POINT_PATCH = Primitive.P31ControlPointPatch;
	public const Primitive D3D_PRIMITIVE_32_CONTROL_POINT_PATCH = Primitive.P32ControlPointPatch;
	public const SrvDimension D3D_SRV_DIMENSION_UNKNOWN = SrvDimension.Unknown;
	public const SrvDimension D3D_SRV_DIMENSION_BUFFER = SrvDimension.Buffer;
	public const SrvDimension D3D_SRV_DIMENSION_TEXTURE1D = SrvDimension.Texture1D;
	public const SrvDimension D3D_SRV_DIMENSION_TEXTURE1DARRAY = SrvDimension.Texture1DArray;
	public const SrvDimension D3D_SRV_DIMENSION_TEXTURE2D = SrvDimension.Texture2D;
	public const SrvDimension D3D_SRV_DIMENSION_TEXTURE2DARRAY = SrvDimension.Texture2DArray;
	public const SrvDimension D3D_SRV_DIMENSION_TEXTURE2DMS = SrvDimension.Texture2DMs;
	public const SrvDimension D3D_SRV_DIMENSION_TEXTURE2DMSARRAY = SrvDimension.Texture2DMsArray;
	public const SrvDimension D3D_SRV_DIMENSION_TEXTURE3D = SrvDimension.Texture3D;
	public const SrvDimension D3D_SRV_DIMENSION_TEXTURECUBE = SrvDimension.TextureCube;
	public const SrvDimension D3D_SRV_DIMENSION_TEXTURECUBEARRAY = SrvDimension.TextureCubeArray;
	public const SrvDimension D3D_SRV_DIMENSION_BUFFEREX = SrvDimension.BufferExtended;
	public const IncludeType D3D_INCLUDE_LOCAL = IncludeType.Local;
	public const IncludeType D3D_INCLUDE_SYSTEM = IncludeType.System;
	public const ShaderVariableClass D3D_SVC_SCALAR = ShaderVariableClass.Scalar;
	public const ShaderVariableClass D3D_SVC_VECTOR = ShaderVariableClass.Vector;
	public const ShaderVariableClass D3D_SVC_MATRIX_ROWS = ShaderVariableClass.MatrixRows;
	public const ShaderVariableClass D3D_SVC_MATRIX_COLUMNS = ShaderVariableClass.MatrixColumns;
	public const ShaderVariableClass D3D_SVC_OBJECT = ShaderVariableClass.Object;
	public const ShaderVariableClass D3D_SVC_STRUCT = ShaderVariableClass.Struct;
	public const ShaderVariableClass D3D_SVC_INTERFACE_CLASS = ShaderVariableClass.InterfaceClass;
	public const ShaderVariableClass D3D_SVC_INTERFACE_POINTER = ShaderVariableClass.InterfacePointer;
	public const ShaderVariableFlags D3D_SVF_USERPACKED = ShaderVariableFlags.UserPacked;
	public const ShaderVariableFlags D3D_SVF_USED = ShaderVariableFlags.Used;
	public const ShaderVariableFlags D3D_SVF_INTERFACE_POINTER = ShaderVariableFlags.InterfacePointer;
	public const ShaderVariableFlags D3D_SVF_INTERFACE_PARAMETER = ShaderVariableFlags.InterfaceParameter;
	public const ShaderVariableType D3D_SVT_VOID = ShaderVariableType.Void;
	public const ShaderVariableType D3D_SVT_BOOL = ShaderVariableType.Bool;
	public const ShaderVariableType D3D_SVT_INT = ShaderVariableType.Int;
	public const ShaderVariableType D3D_SVT_FLOAT = ShaderVariableType.Float;
	public const ShaderVariableType D3D_SVT_STRING = ShaderVariableType.String;
	public const ShaderVariableType D3D_SVT_TEXTURE = ShaderVariableType.Texture;
	public const ShaderVariableType D3D_SVT_TEXTURE1D = ShaderVariableType.Texture1D;
	public const ShaderVariableType D3D_SVT_TEXTURE2D = ShaderVariableType.Texture2D;
	public const ShaderVariableType D3D_SVT_TEXTURE3D = ShaderVariableType.Texture3D;
	public const ShaderVariableType D3D_SVT_TEXTURECUBE = ShaderVariableType.TextureCube;
	public const ShaderVariableType D3D_SVT_SAMPLER = ShaderVariableType.Sampler;
	public const ShaderVariableType D3D_SVT_SAMPLER1D = ShaderVariableType.Sampler1D;
	public const ShaderVariableType D3D_SVT_SAMPLER2D = ShaderVariableType.Sampler2D;
	public const ShaderVariableType D3D_SVT_SAMPLER3D = ShaderVariableType.Sampler3D;
	public const ShaderVariableType D3D_SVT_SAMPLERCUBE = ShaderVariableType.SamplerCube;
	public const ShaderVariableType D3D_SVT_PIXELSHADER = ShaderVariableType.PixelShader;
	public const ShaderVariableType D3D_SVT_VERTEXSHADER = ShaderVariableType.VertexShader;
	public const ShaderVariableType D3D_SVT_PIXELFRAGMENT = ShaderVariableType.PixelFragment;
	public const ShaderVariableType D3D_SVT_VERTEXFRAGMENT = ShaderVariableType.VertexFragment;
	public const ShaderVariableType D3D_SVT_UINT = ShaderVariableType.Uint;
	public const ShaderVariableType D3D_SVT_UINT8 = ShaderVariableType.Uint8;
	public const ShaderVariableType D3D_SVT_GEOMETRYSHADER = ShaderVariableType.GeometryShader;
	public const ShaderVariableType D3D_SVT_RASTERIZER = ShaderVariableType.Rasterizer;
	public const ShaderVariableType D3D_SVT_DEPTHSTENCIL = ShaderVariableType.DepthStencil;
	public const ShaderVariableType D3D_SVT_BLEND = ShaderVariableType.Blend;
	public const ShaderVariableType D3D_SVT_BUFFER = ShaderVariableType.Buffer;
	public const ShaderVariableType D3D_SVT_CBUFFER = ShaderVariableType.ConstantBuffer;
	public const ShaderVariableType D3D_SVT_TBUFFER = ShaderVariableType.TextureBuffer;
	public const ShaderVariableType D3D_SVT_TEXTURE1DARRAY = ShaderVariableType.Texture1DArray;
	public const ShaderVariableType D3D_SVT_TEXTURE2DARRAY = ShaderVariableType.Texture2DArray;
	public const ShaderVariableType D3D_SVT_RENDERTARGETVIEW = ShaderVariableType.RenderTargetView;
	public const ShaderVariableType D3D_SVT_DEPTHSTENCILVIEW = ShaderVariableType.DepthStencilView;
	public const ShaderVariableType D3D_SVT_TEXTURE2DMS = ShaderVariableType.Texture2DMs;
	public const ShaderVariableType D3D_SVT_TEXTURE2DMSARRAY = ShaderVariableType.Texture2DMsArray;
	public const ShaderVariableType D3D_SVT_TEXTURECUBEARRAY = ShaderVariableType.TextureCubeArray;
	public const ShaderVariableType D3D_SVT_HULLSHADER = ShaderVariableType.Hullshader;
	public const ShaderVariableType D3D_SVT_DOMAINSHADER = ShaderVariableType.DomainShader;
	public const ShaderVariableType D3D_SVT_INTERFACE_POINTER = ShaderVariableType.InterfacePointer;
	public const ShaderVariableType D3D_SVT_COMPUTESHADER = ShaderVariableType.ComputeShader;
	public const ShaderVariableType D3D_SVT_DOUBLE = ShaderVariableType.Double;
	public const ShaderVariableType D3D_SVT_RWTEXTURE1D = ShaderVariableType.RwTexture1D;
	public const ShaderVariableType D3D_SVT_RWTEXTURE1DARRAY = ShaderVariableType.RwTexture1DArray;
	public const ShaderVariableType D3D_SVT_RWTEXTURE2D = ShaderVariableType.RwTexture2D;
	public const ShaderVariableType D3D_SVT_RWTEXTURE2DARRAY = ShaderVariableType.RwTexture2DArray;
	public const ShaderVariableType D3D_SVT_RWTEXTURE3D = ShaderVariableType.RwTexture3D;
	public const ShaderVariableType D3D_SVT_RWBUFFER = ShaderVariableType.RwBuffer;
	public const ShaderVariableType D3D_SVT_BYTEADDRESS_BUFFER = ShaderVariableType.ByteAddressBuffer;
	public const ShaderVariableType D3D_SVT_RWBYTEADDRESS_BUFFER = ShaderVariableType.RwByteAddressBuffer;
	public const ShaderVariableType D3D_SVT_STRUCTURED_BUFFER = ShaderVariableType.StructuredBuffer;
	public const ShaderVariableType D3D_SVT_RWSTRUCTURED_BUFFER = ShaderVariableType.RwStructuredBuffer;
	public const ShaderVariableType D3D_SVT_APPEND_STRUCTURED_BUFFER = ShaderVariableType.AppendStructuredBuffer;
	public const ShaderVariableType D3D_SVT_CONSUME_STRUCTURED_BUFFER = ShaderVariableType.ConsumeStructuredBuffer;
	public const ShaderVariableType D3D_SVT_MIN8FLOAT = ShaderVariableType.Min8Float;
	public const ShaderVariableType D3D_SVT_MIN10FLOAT = ShaderVariableType.Min10Float;
	public const ShaderVariableType D3D_SVT_MIN16FLOAT = ShaderVariableType.Min16Float;
	public const ShaderVariableType D3D_SVT_MIN12INT = ShaderVariableType.Min12Int;
	public const ShaderVariableType D3D_SVT_MIN16INT = ShaderVariableType.Min16Int;
	public const ShaderVariableType D3D_SVT_MIN16UINT = ShaderVariableType.Min16Uint;
	public const ShaderVariableType D3D_SVT_INT16 = ShaderVariableType.Int16;
	public const ShaderVariableType D3D_SVT_UINT16 = ShaderVariableType.UInt16;
	public const ShaderVariableType D3D_SVT_FLOAT16 = ShaderVariableType.Float16;
	public const ShaderVariableType D3D_SVT_INT64 = ShaderVariableType.Int64;
	public const ShaderVariableType D3D_SVT_UINT64 = ShaderVariableType.UInt64;
	public const ShaderInputFlags D3D_SIF_USERPACKED = ShaderInputFlags.UserPacked;
	public const ShaderInputFlags D3D_SIF_COMPARISON_SAMPLER = ShaderInputFlags.ComparisonSampler;
	public const ShaderInputFlags D3D_SIF_TEXTURE_COMPONENT_0 = ShaderInputFlags.TextureComponent0;
	public const ShaderInputFlags D3D_SIF_TEXTURE_COMPONENT_1 = ShaderInputFlags.TextureComponent1;
	public const ShaderInputFlags D3D_SIF_TEXTURE_COMPONENTS = ShaderInputFlags.TextureComponents;
	public const ShaderInputFlags D3D_SIF_UNUSED = ShaderInputFlags.Unused;
	public const ShaderInputType D3D_SIT_CBUFFER = ShaderInputType.ConstantBuffer;
	public const ShaderInputType D3D_SIT_TBUFFER = ShaderInputType.TextureBuffer;
	public const ShaderInputType D3D_SIT_TEXTURE = ShaderInputType.Texture;
	public const ShaderInputType D3D_SIT_SAMPLER = ShaderInputType.Sampler;
	public const ShaderInputType D3D_SIT_UAV_RWTYPED = ShaderInputType.UavRwTyped;
	public const ShaderInputType D3D_SIT_STRUCTURED = ShaderInputType.Structured;
	public const ShaderInputType D3D_SIT_UAV_RWSTRUCTURED = ShaderInputType.UavRwStructured;
	public const ShaderInputType D3D_SIT_BYTEADDRESS = ShaderInputType.ByteAddress;
	public const ShaderInputType D3D_SIT_UAV_RWBYTEADDRESS = ShaderInputType.UavRwByteAddress;
	public const ShaderInputType D3D_SIT_UAV_APPEND_STRUCTURED = ShaderInputType.UavAppendStructured;
	public const ShaderInputType D3D_SIT_UAV_CONSUME_STRUCTURED = ShaderInputType.UavConsumeStructured;
	public const ShaderInputType D3D_SIT_UAV_RWSTRUCTURED_WITH_COUNTER = ShaderInputType.UavRwStructuredWithCounter;
	public const ShaderInputType D3D_SIT_RTACCELERATIONSTRUCTURE = ShaderInputType.RtAccelerationStructure;
	public const ShaderInputType D3D_SIT_UAV_FEEDBACKTEXTURE = ShaderInputType.UavFeedbackTexture;
	public const ShaderConstantBufferFlags D3D_CBF_USERPACKED = ShaderConstantBufferFlags.UserPacked;
	public const ConstantBufferType D3D_CT_CBUFFER = ConstantBufferType.ConstantBuffer;
	public const ConstantBufferType D3D_CT_TBUFFER = ConstantBufferType.TextureBuffer;
	public const ConstantBufferType D3D_CT_INTERFACE_POINTERS = ConstantBufferType.InterfacePointers;
	public const ConstantBufferType D3D_CT_RESOURCE_BIND_INFO = ConstantBufferType.ResourceBindInfo;
	public const Name D3D_NAME_UNDEFINED = Name.Undefined;
	public const Name D3D_NAME_POSITION = Name.Position;
	public const Name D3D_NAME_CLIP_DISTANCE = Name.ClipDistance;
	public const Name D3D_NAME_CULL_DISTANCE = Name.CullDistance;
	public const Name D3D_NAME_RENDER_TARGET_ARRAY_INDEX = Name.RenderTargetArrayIndex;
	public const Name D3D_NAME_VIEWPORT_ARRAY_INDEX = Name.ViewportArrayIndex;
	public const Name D3D_NAME_VERTEX_ID = Name.VertexId;
	public const Name D3D_NAME_PRIMITIVE_ID = Name.PrimitiveId;
	public const Name D3D_NAME_INSTANCE_ID = Name.InstanceId;
	public const Name D3D_NAME_IS_FRONT_FACE = Name.IsFrontFace;
	public const Name D3D_NAME_SAMPLE_INDEX = Name.SampleIndex;
	public const Name D3D_NAME_FINAL_QUAD_EDGE_TESSFACTOR = Name.FinalQuadEdgeTessFactor;
	public const Name D3D_NAME_FINAL_QUAD_INSIDE_TESSFACTOR = Name.FinalQuadInsideTessFactor;
	public const Name D3D_NAME_FINAL_TRI_EDGE_TESSFACTOR = Name.FinalTriEdgeTessFactor;
	public const Name D3D_NAME_FINAL_TRI_INSIDE_TESSFACTOR = Name.FinalTriInsideTessFactor;
	public const Name D3D_NAME_FINAL_LINE_DETAIL_TESSFACTOR = Name.FinalLineDetailTessFactor;
	public const Name D3D_NAME_FINAL_LINE_DENSITY_TESSFACTOR = Name.FinalLineDensityTessFactor;
	public const Name D3D_NAME_BARYCENTRICS = Name.Barycentrics;
	public const Name D3D_NAME_SHADINGRATE = Name.ShadingRate;
	public const Name D3D_NAME_CULLPRIMITIVE = Name.CullPrimitive;
	public const Name D3D_NAME_TARGET = Name.Target;
	public const Name D3D_NAME_DEPTH = Name.Depth;
	public const Name D3D_NAME_COVERAGE = Name.Coverage;
	public const Name D3D_NAME_DEPTH_GREATER_EQUAL = Name.DepthGreaterEqual;
	public const Name D3D_NAME_DEPTH_LESS_EQUAL = Name.DepthLessEqual;
	public const Name D3D_NAME_STENCIL_REF = Name.StencilRef;
	public const Name D3D_NAME_INNER_COVERAGE = Name.InnerCoverage;
	public const ResourceReturnType D3D_RETURN_TYPE_UNORM = ResourceReturnType.Unorm;
	public const ResourceReturnType D3D_RETURN_TYPE_SNORM = ResourceReturnType.Snorm;
	public const ResourceReturnType D3D_RETURN_TYPE_SINT = ResourceReturnType.Sint;
	public const ResourceReturnType D3D_RETURN_TYPE_UINT = ResourceReturnType.Uint;
	public const ResourceReturnType D3D_RETURN_TYPE_FLOAT = ResourceReturnType.Float;
	public const ResourceReturnType D3D_RETURN_TYPE_MIXED = ResourceReturnType.Mixed;
	public const ResourceReturnType D3D_RETURN_TYPE_DOUBLE = ResourceReturnType.Double;
	public const ResourceReturnType D3D_RETURN_TYPE_CONTINUED = ResourceReturnType.Continued;
	public const RegisterComponentType D3D_REGISTER_COMPONENT_UNKNOWN = RegisterComponentType.Unknown;
	public const RegisterComponentType D3D_REGISTER_COMPONENT_UINT32 = RegisterComponentType.UInt32;
	public const RegisterComponentType D3D_REGISTER_COMPONENT_SINT32 = RegisterComponentType.Sint32;
	public const RegisterComponentType D3D_REGISTER_COMPONENT_FLOAT32 = RegisterComponentType.Float32;
	public const RegisterComponentType D3D_REGISTER_COMPONENT_UINT16 = RegisterComponentType.UInt16;
	public const RegisterComponentType D3D_REGISTER_COMPONENT_SINT16 = RegisterComponentType.Sint16;
	public const RegisterComponentType D3D_REGISTER_COMPONENT_FLOAT16 = RegisterComponentType.Float16;
	public const RegisterComponentType D3D_REGISTER_COMPONENT_UINT64 = RegisterComponentType.UInt64;
	public const RegisterComponentType D3D_REGISTER_COMPONENT_SINT64 = RegisterComponentType.Sint64;
	public const RegisterComponentType D3D_REGISTER_COMPONENT_FLOAT64 = RegisterComponentType.Float64;
	public const TessellatorDomain D3D_TESSELLATOR_DOMAIN_UNDEFINED = TessellatorDomain.Undefined;
	public const TessellatorDomain D3D_TESSELLATOR_DOMAIN_ISOLINE = TessellatorDomain.Isoline;
	public const TessellatorDomain D3D_TESSELLATOR_DOMAIN_TRI = TessellatorDomain.Tri;
	public const TessellatorDomain D3D_TESSELLATOR_DOMAIN_QUAD = TessellatorDomain.Quad;
	public const TessellatorPartitioning D3D_TESSELLATOR_PARTITIONING_UNDEFINED = TessellatorPartitioning.Undefined;
	public const TessellatorPartitioning D3D_TESSELLATOR_PARTITIONING_INTEGER = TessellatorPartitioning.Integer;
	public const TessellatorPartitioning D3D_TESSELLATOR_PARTITIONING_POW2 = TessellatorPartitioning.Pow2;
	public const TessellatorPartitioning D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_ODD = TessellatorPartitioning.FractionalOdd;
	public const TessellatorPartitioning D3D_TESSELLATOR_PARTITIONING_FRACTIONAL_EVEN = TessellatorPartitioning.FractionalEven;
	public const TessellatorOutputPrimitive D3D_TESSELLATOR_OUTPUT_UNDEFINED = TessellatorOutputPrimitive.Undefined;
	public const TessellatorOutputPrimitive D3D_TESSELLATOR_OUTPUT_POINT = TessellatorOutputPrimitive.Point;
	public const TessellatorOutputPrimitive D3D_TESSELLATOR_OUTPUT_LINE = TessellatorOutputPrimitive.Line;
	public const TessellatorOutputPrimitive D3D_TESSELLATOR_OUTPUT_TRIANGLE_CW = TessellatorOutputPrimitive.TriangleCw;
	public const TessellatorOutputPrimitive D3D_TESSELLATOR_OUTPUT_TRIANGLE_CCW = TessellatorOutputPrimitive.TriangleCcw;
	public const MinPrecision D3D_MIN_PRECISION_DEFAULT = MinPrecision.Default;
	public const MinPrecision D3D_MIN_PRECISION_FLOAT_16 = MinPrecision.Float16;
	public const MinPrecision D3D_MIN_PRECISION_FLOAT_2_8 = MinPrecision.Float28;
	public const MinPrecision D3D_MIN_PRECISION_RESERVED = MinPrecision.Reserved;
	public const MinPrecision D3D_MIN_PRECISION_SINT_16 = MinPrecision.Sint16;
	public const MinPrecision D3D_MIN_PRECISION_UINT_16 = MinPrecision.Uint16;
	public const MinPrecision D3D_MIN_PRECISION_ANY_16 = MinPrecision.Any16;
	public const MinPrecision D3D_MIN_PRECISION_ANY_10 = MinPrecision.Any10;
	public const InterpolationMode D3D_INTERPOLATION_UNDEFINED = InterpolationMode.Undefined;
	public const InterpolationMode D3D_INTERPOLATION_CONSTANT = InterpolationMode.Constant;
	public const InterpolationMode D3D_INTERPOLATION_LINEAR = InterpolationMode.Linear;
	public const InterpolationMode D3D_INTERPOLATION_LINEAR_CENTROID = InterpolationMode.LinearCentroid;
	public const InterpolationMode D3D_INTERPOLATION_LINEAR_NOPERSPECTIVE = InterpolationMode.LinearNoPerspective;
	public const InterpolationMode D3D_INTERPOLATION_LINEAR_NOPERSPECTIVE_CENTROID = InterpolationMode.LinearNoPerspectiveCentroid;
	public const InterpolationMode D3D_INTERPOLATION_LINEAR_SAMPLE = InterpolationMode.LinearSample;
	public const InterpolationMode D3D_INTERPOLATION_LINEAR_NOPERSPECTIVE_SAMPLE = InterpolationMode.LinearNoPerspectiveSample;
	public const ParameterFlags D3D_PF_NONE = ParameterFlags.None;
	public const ParameterFlags D3D_PF_IN = ParameterFlags.In;
	public const ParameterFlags D3D_PF_OUT = ParameterFlags.Out;
	public const FormatLayout D3DFL_STANDARD = FormatLayout.D3DFL_STANDARD;
	public const FormatLayout D3DFL_CUSTOM = FormatLayout.D3DFL_CUSTOM;
	public const FormatTypeLevel D3DFTL_NO_TYPE = FormatTypeLevel.D3DFTL_NO_TYPE;
	public const FormatTypeLevel D3DFTL_PARTIAL_TYPE = FormatTypeLevel.D3DFTL_PARTIAL_TYPE;
	public const FormatTypeLevel D3DFTL_FULL_TYPE = FormatTypeLevel.D3DFTL_FULL_TYPE;
	public const FormatComponentName D3DFCN_R = FormatComponentName.D3DFCN_R;
	public const FormatComponentName D3DFCN_G = FormatComponentName.D3DFCN_G;
	public const FormatComponentName D3DFCN_B = FormatComponentName.D3DFCN_B;
	public const FormatComponentName D3DFCN_A = FormatComponentName.D3DFCN_A;
	public const FormatComponentName D3DFCN_D = FormatComponentName.D3DFCN_D;
	public const FormatComponentName D3DFCN_S = FormatComponentName.D3DFCN_S;
	public const FormatComponentName D3DFCN_X = FormatComponentName.D3DFCN_X;
	public const FormatComponentInterpretation D3DFCI_TYPELESS = FormatComponentInterpretation.D3DFCI_TYPELESS;
	public const FormatComponentInterpretation D3DFCI_FLOAT = FormatComponentInterpretation.D3DFCI_FLOAT;
	public const FormatComponentInterpretation D3DFCI_SNORM = FormatComponentInterpretation.D3DFCI_SNORM;
	public const FormatComponentInterpretation D3DFCI_UNORM = FormatComponentInterpretation.D3DFCI_UNORM;
	public const FormatComponentInterpretation D3DFCI_SINT = FormatComponentInterpretation.D3DFCI_SINT;
	public const FormatComponentInterpretation D3DFCI_UINT = FormatComponentInterpretation.D3DFCI_UINT;
	public const FormatComponentInterpretation D3DFCI_UNORM_SRGB = FormatComponentInterpretation.D3DFCI_UNORM_SRGB;
	public const FormatComponentInterpretation D3DFCI_BIASED_FIXED_2_8 = FormatComponentInterpretation.D3DFCI_BIASED_FIXED_2_8;
}

