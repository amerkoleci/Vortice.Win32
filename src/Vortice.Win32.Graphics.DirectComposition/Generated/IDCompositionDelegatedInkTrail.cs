// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

namespace Win32.Graphics.DirectComposition;

/// <include file='../DirectComposition.xml' path='doc/member[@name="IDCompositionDelegatedInkTrail"]/*' />
/// <unmanaged>IDCompositionDelegatedInkTrail</unmanaged>
[Guid("c2448e9b-547d-4057-8cf5-8144ede1c2da")]
[NativeTypeName("struct IDCompositionDelegatedInkTrail : IUnknown")]
[NativeInheritance("IUnknown")]
public unsafe partial struct IDCompositionDelegatedInkTrail : IDCompositionDelegatedInkTrail.Interface, INativeGuid
{
	public static ref readonly Guid IID_IDCompositionDelegatedInkTrail
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			ReadOnlySpan<byte> data = [
				0x9B, 0x8E, 0x44, 0xC2,
				0x7D, 0x54,
				0x57, 0x40,
				0x8C,
				0xF5,
				0x81,
				0x44,
				0xED,
				0xE1,
				0xC2,
				0xDA
			];

			Debug.Assert(data.Length == Unsafe.SizeOf<Guid>());
			return ref Unsafe.As<byte, Guid>(ref MemoryMarshal.GetReference(data));
		}
	}

	static Guid* INativeGuid.NativeGuid => (Guid*)Unsafe.AsPointer(ref Unsafe.AsRef(in IID_IDCompositionDelegatedInkTrail));

	public void** lpVtbl;

	/// <inheritdoc cref="IUnknown.QueryInterface" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(0)]
	public HResult QueryInterface([NativeTypeName("const IID &")] Guid* riid, void** ppvObject)
	{
		return ((delegate* unmanaged[MemberFunction]<IDCompositionDelegatedInkTrail*, Guid*, void**, int>)(lpVtbl[0]))((IDCompositionDelegatedInkTrail*)Unsafe.AsPointer(ref this), riid, ppvObject);
	}

	/// <inheritdoc cref="IUnknown.AddRef" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(1)]
	[return: NativeTypeName("ULONG")]
	public uint AddRef()
	{
		return ((delegate* unmanaged[MemberFunction]<IDCompositionDelegatedInkTrail*, uint>)(lpVtbl[1]))((IDCompositionDelegatedInkTrail*)Unsafe.AsPointer(ref this));
	}

	/// <inheritdoc cref="IUnknown.Release" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(2)]
	[return: NativeTypeName("ULONG")]
	public uint Release()
	{
		return ((delegate* unmanaged[MemberFunction]<IDCompositionDelegatedInkTrail*, uint>)(lpVtbl[2]))((IDCompositionDelegatedInkTrail*)Unsafe.AsPointer(ref this));
	}

	/// <include file='../DirectComposition.xml' path='doc/member[@name="IDCompositionDelegatedInkTrail::AddTrailPoints"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(3)]
	public HResult AddTrailPoints(InkTrailPoint* inkPoints, uint inkPointsCount, uint* generationId)
	{
		return ((delegate* unmanaged[MemberFunction]<IDCompositionDelegatedInkTrail*, InkTrailPoint*, uint, uint*, int>)(lpVtbl[3]))((IDCompositionDelegatedInkTrail*)Unsafe.AsPointer(ref this), inkPoints, inkPointsCount, generationId);
	}

	/// <include file='../DirectComposition.xml' path='doc/member[@name="IDCompositionDelegatedInkTrail::AddTrailPointsWithPrediction"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(4)]
	public HResult AddTrailPointsWithPrediction(InkTrailPoint* inkPoints, uint inkPointsCount, InkTrailPoint* predictedInkPoints, uint predictedInkPointsCount, uint* generationId)
	{
		return ((delegate* unmanaged[MemberFunction]<IDCompositionDelegatedInkTrail*, InkTrailPoint*, uint, InkTrailPoint*, uint, uint*, int>)(lpVtbl[4]))((IDCompositionDelegatedInkTrail*)Unsafe.AsPointer(ref this), inkPoints, inkPointsCount, predictedInkPoints, predictedInkPointsCount, generationId);
	}

	/// <include file='../DirectComposition.xml' path='doc/member[@name="IDCompositionDelegatedInkTrail::RemoveTrailPoints"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(5)]
	public HResult RemoveTrailPoints(uint generationId)
	{
		return ((delegate* unmanaged[MemberFunction]<IDCompositionDelegatedInkTrail*, uint, int>)(lpVtbl[5]))((IDCompositionDelegatedInkTrail*)Unsafe.AsPointer(ref this), generationId);
	}

	/// <include file='../DirectComposition.xml' path='doc/member[@name="IDCompositionDelegatedInkTrail::StartNewTrail"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(6)]
	public HResult StartNewTrail(Color4* color)
	{
		return ((delegate* unmanaged[MemberFunction]<IDCompositionDelegatedInkTrail*, Color4*, int>)(lpVtbl[6]))((IDCompositionDelegatedInkTrail*)Unsafe.AsPointer(ref this), color);
	}

	public interface Interface : IUnknown.Interface
	{
		[VtblIndex(3)]
		HResult AddTrailPoints(InkTrailPoint* inkPoints, uint inkPointsCount, uint* generationId);

		[VtblIndex(4)]
		HResult AddTrailPointsWithPrediction(InkTrailPoint* inkPoints, uint inkPointsCount, InkTrailPoint* predictedInkPoints, uint predictedInkPointsCount, uint* generationId);

		[VtblIndex(5)]
		HResult RemoveTrailPoints(uint generationId);

		[VtblIndex(6)]
		HResult StartNewTrail(Color4* color);
	}
}

