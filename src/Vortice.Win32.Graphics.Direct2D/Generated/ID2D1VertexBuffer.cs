// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

namespace Win32.Graphics.Direct2D;

/// <include file='../Direct2D.xml' path='doc/member[@name="ID2D1VertexBuffer"]/*' />
/// <unmanaged>ID2D1VertexBuffer</unmanaged>
[Guid("9b8b1336-00a5-4668-92b7-ced5d8bf9b7b")]
[NativeTypeName("struct ID2D1VertexBuffer : IUnknown")]
[NativeInheritance("IUnknown")]
public unsafe partial struct ID2D1VertexBuffer : ID2D1VertexBuffer.Interface, INativeGuid
{
	public static ref readonly Guid IID_ID2D1VertexBuffer
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			ReadOnlySpan<byte> data = new byte[] {
				0x36, 0x13, 0x8B, 0x9B,
				0xA5, 0x00,
				0x68, 0x46,
				0x92,
				0xB7,
				0xCE,
				0xD5,
				0xD8,
				0xBF,
				0x9B,
				0x7B
			};

			Debug.Assert(data.Length == Unsafe.SizeOf<Guid>());
			return ref Unsafe.As<byte, Guid>(ref MemoryMarshal.GetReference(data));
		}
	}

	static Guid* INativeGuid.NativeGuid => (Guid*)Unsafe.AsPointer(ref Unsafe.AsRef(in IID_ID2D1VertexBuffer));

	public void** lpVtbl;

	/// <inheritdoc cref="IUnknown.QueryInterface" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(0)]
	public HResult QueryInterface([NativeTypeName("const IID &")] Guid* riid, void** ppvObject)
	{
		return ((delegate* unmanaged[MemberFunction]<ID2D1VertexBuffer*, Guid*, void**, int>)(lpVtbl[0]))((ID2D1VertexBuffer*)Unsafe.AsPointer(ref this), riid, ppvObject);
	}

	/// <inheritdoc cref="IUnknown.AddRef" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(1)]
	[return: NativeTypeName("ULONG")]
	public uint AddRef()
	{
		return ((delegate* unmanaged[MemberFunction]<ID2D1VertexBuffer*, uint>)(lpVtbl[1]))((ID2D1VertexBuffer*)Unsafe.AsPointer(ref this));
	}

	/// <inheritdoc cref="IUnknown.Release" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(2)]
	[return: NativeTypeName("ULONG")]
	public uint Release()
	{
		return ((delegate* unmanaged[MemberFunction]<ID2D1VertexBuffer*, uint>)(lpVtbl[2]))((ID2D1VertexBuffer*)Unsafe.AsPointer(ref this));
	}

	/// <include file='../Direct2D.xml' path='doc/member[@name="ID2D1VertexBuffer::Map"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(3)]
	public HResult Map(byte** data, uint bufferSize)
	{
		return ((delegate* unmanaged[MemberFunction]<ID2D1VertexBuffer*, byte**, uint, int>)(lpVtbl[3]))((ID2D1VertexBuffer*)Unsafe.AsPointer(ref this), data, bufferSize);
	}

	/// <include file='../Direct2D.xml' path='doc/member[@name="ID2D1VertexBuffer::Unmap"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(4)]
	public HResult Unmap()
	{
		return ((delegate* unmanaged[MemberFunction]<ID2D1VertexBuffer*, int>)(lpVtbl[4]))((ID2D1VertexBuffer*)Unsafe.AsPointer(ref this));
	}

	public interface Interface : IUnknown.Interface
	{
		[VtblIndex(3)]
		HResult Map(byte** data, uint bufferSize);

		[VtblIndex(4)]
		HResult Unmap();
	}
}

