// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

namespace Win32.Graphics.Direct3D11;

/// <include file='../Direct3D11.xml' path='doc/member[@name="ID3D11LinkingNode"]/*' />
/// <unmanaged>ID3D11LinkingNode</unmanaged>
[Guid("d80dd70c-8d2f-4751-94a1-03c79b3556db")]
[NativeTypeName("struct ID3D11LinkingNode : IUnknown")]
[NativeInheritance("IUnknown")]
public unsafe partial struct ID3D11LinkingNode : ID3D11LinkingNode.Interface, INativeGuid
{
	public static ref readonly Guid IID_ID3D11LinkingNode
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			ReadOnlySpan<byte> data = [
				0x0C, 0xD7, 0x0D, 0xD8,
				0x2F, 0x8D,
				0x51, 0x47,
				0x94,
				0xA1,
				0x03,
				0xC7,
				0x9B,
				0x35,
				0x56,
				0xDB
			];

			Debug.Assert(data.Length == Unsafe.SizeOf<Guid>());
			return ref Unsafe.As<byte, Guid>(ref MemoryMarshal.GetReference(data));
		}
	}

	static Guid* INativeGuid.NativeGuid => (Guid*)Unsafe.AsPointer(ref Unsafe.AsRef(in IID_ID3D11LinkingNode));

	public void** lpVtbl;

	/// <inheritdoc cref="IUnknown.QueryInterface" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(0)]
	public HResult QueryInterface([NativeTypeName("const IID &")] Guid* riid, void** ppvObject)
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D11LinkingNode*, Guid*, void**, int>)(lpVtbl[0]))((ID3D11LinkingNode*)Unsafe.AsPointer(ref this), riid, ppvObject);
	}

	/// <inheritdoc cref="IUnknown.AddRef" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(1)]
	[return: NativeTypeName("ULONG")]
	public uint AddRef()
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D11LinkingNode*, uint>)(lpVtbl[1]))((ID3D11LinkingNode*)Unsafe.AsPointer(ref this));
	}

	/// <inheritdoc cref="IUnknown.Release" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(2)]
	[return: NativeTypeName("ULONG")]
	public uint Release()
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D11LinkingNode*, uint>)(lpVtbl[2]))((ID3D11LinkingNode*)Unsafe.AsPointer(ref this));
	}


	public interface Interface : IUnknown.Interface
	{
	}
}

