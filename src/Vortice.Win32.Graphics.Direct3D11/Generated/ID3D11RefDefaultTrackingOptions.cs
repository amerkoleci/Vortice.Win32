// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

namespace Win32.Graphics.Direct3D11;

/// <include file='../Direct3D11.xml' path='doc/member[@name="ID3D11RefDefaultTrackingOptions"]/*' />
/// <unmanaged>ID3D11RefDefaultTrackingOptions</unmanaged>
[Guid("03916615-c644-418c-9bf4-75db5be63ca0")]
[NativeTypeName("struct ID3D11RefDefaultTrackingOptions : IUnknown")]
[NativeInheritance("IUnknown")]
public unsafe partial struct ID3D11RefDefaultTrackingOptions : ID3D11RefDefaultTrackingOptions.Interface, INativeGuid
{
	public static ref readonly Guid IID_ID3D11RefDefaultTrackingOptions
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			ReadOnlySpan<byte> data = new byte[] {
				0x15, 0x66, 0x91, 0x03,
				0x44, 0xC6,
				0x8C, 0x41,
				0x9B,
				0xF4,
				0x75,
				0xDB,
				0x5B,
				0xE6,
				0x3C,
				0xA0
			};

			Debug.Assert(data.Length == Unsafe.SizeOf<Guid>());
			return ref Unsafe.As<byte, Guid>(ref MemoryMarshal.GetReference(data));
		}
	}

	static Guid* INativeGuid.NativeGuid => (Guid*)Unsafe.AsPointer(ref Unsafe.AsRef(in IID_ID3D11RefDefaultTrackingOptions));

	public void** lpVtbl;

	/// <inheritdoc cref="IUnknown.QueryInterface" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(0)]
	public HResult QueryInterface([NativeTypeName("const IID &")] Guid* riid, void** ppvObject)
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D11RefDefaultTrackingOptions*, Guid*, void**, int>)(lpVtbl[0]))((ID3D11RefDefaultTrackingOptions*)Unsafe.AsPointer(ref this), riid, ppvObject);
	}

	/// <inheritdoc cref="IUnknown.AddRef" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(1)]
	[return: NativeTypeName("ULONG")]
	public uint AddRef()
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D11RefDefaultTrackingOptions*, uint>)(lpVtbl[1]))((ID3D11RefDefaultTrackingOptions*)Unsafe.AsPointer(ref this));
	}

	/// <inheritdoc cref="IUnknown.Release" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(2)]
	[return: NativeTypeName("ULONG")]
	public uint Release()
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D11RefDefaultTrackingOptions*, uint>)(lpVtbl[2]))((ID3D11RefDefaultTrackingOptions*)Unsafe.AsPointer(ref this));
	}

	/// <include file='../Direct3D11.xml' path='doc/member[@name="ID3D11RefDefaultTrackingOptions::SetTrackingOptions"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(3)]
	public HResult SetTrackingOptions(uint ResourceTypeFlags, uint Options)
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D11RefDefaultTrackingOptions*, uint, uint, int>)(lpVtbl[3]))((ID3D11RefDefaultTrackingOptions*)Unsafe.AsPointer(ref this), ResourceTypeFlags, Options);
	}

	public interface Interface : IUnknown.Interface
	{
		[VtblIndex(3)]
		HResult SetTrackingOptions(uint ResourceTypeFlags, uint Options);
	}
}

