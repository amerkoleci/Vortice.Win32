// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

namespace Win32.Graphics.Direct3D12;

/// <include file='../Direct3D12.xml' path='doc/member[@name="ID3D12DSRDeviceFactory"]/*' />
/// <unmanaged>ID3D12DSRDeviceFactory</unmanaged>
[Guid("51ee7783-6426-4428-b182-42f3541fca71")]
[NativeTypeName("struct ID3D12DSRDeviceFactory : IUnknown")]
[NativeInheritance("IUnknown")]
public unsafe partial struct ID3D12DSRDeviceFactory : ID3D12DSRDeviceFactory.Interface, INativeGuid
{
	public static ref readonly Guid IID_ID3D12DSRDeviceFactory
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			ReadOnlySpan<byte> data = new byte[] {
				0x83, 0x77, 0xEE, 0x51,
				0x26, 0x64,
				0x28, 0x44,
				0xB1,
				0x82,
				0x42,
				0xF3,
				0x54,
				0x1F,
				0xCA,
				0x71
			};

			Debug.Assert(data.Length == Unsafe.SizeOf<Guid>());
			return ref Unsafe.As<byte, Guid>(ref MemoryMarshal.GetReference(data));
		}
	}

	static Guid* INativeGuid.NativeGuid => (Guid*)Unsafe.AsPointer(ref Unsafe.AsRef(in IID_ID3D12DSRDeviceFactory));

	public void** lpVtbl;

	/// <inheritdoc cref="IUnknown.QueryInterface" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(0)]
	public HResult QueryInterface([NativeTypeName("const IID &")] Guid* riid, void** ppvObject)
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D12DSRDeviceFactory*, Guid*, void**, int>)(lpVtbl[0]))((ID3D12DSRDeviceFactory*)Unsafe.AsPointer(ref this), riid, ppvObject);
	}

	/// <inheritdoc cref="IUnknown.AddRef" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(1)]
	[return: NativeTypeName("ULONG")]
	public uint AddRef()
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D12DSRDeviceFactory*, uint>)(lpVtbl[1]))((ID3D12DSRDeviceFactory*)Unsafe.AsPointer(ref this));
	}

	/// <inheritdoc cref="IUnknown.Release" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(2)]
	[return: NativeTypeName("ULONG")]
	public uint Release()
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D12DSRDeviceFactory*, uint>)(lpVtbl[2]))((ID3D12DSRDeviceFactory*)Unsafe.AsPointer(ref this));
	}

	/// <include file='../Direct3D12.xml' path='doc/member[@name="ID3D12DSRDeviceFactory::CreateDSRDevice"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(3)]
	public HResult CreateDSRDevice(ID3D12Device* pD3D12Device, uint NodeMask, Guid* riid, void** ppvDSRDevice)
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D12DSRDeviceFactory*, ID3D12Device*, uint, Guid*, void**, int>)(lpVtbl[3]))((ID3D12DSRDeviceFactory*)Unsafe.AsPointer(ref this), pD3D12Device, NodeMask, riid, ppvDSRDevice);
	}

	public interface Interface : IUnknown.Interface
	{
		[VtblIndex(3)]
		HResult CreateDSRDevice(ID3D12Device* pD3D12Device, uint NodeMask, Guid* riid, void** ppvDSRDevice);
	}
}

