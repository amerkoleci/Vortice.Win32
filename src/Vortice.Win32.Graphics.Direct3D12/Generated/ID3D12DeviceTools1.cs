// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

namespace Win32.Graphics.Direct3D12;

/// <include file='../Direct3D12.xml' path='doc/member[@name="ID3D12DeviceTools1"]/*' />
/// <unmanaged>ID3D12DeviceTools1</unmanaged>
[Guid("e30e9fc7-e641-4d6e-8a81-9dd9206ec47a")]
[NativeTypeName("struct ID3D12DeviceTools1 : ID3D12DeviceTools")]
[NativeInheritance("ID3D12DeviceTools")]
public unsafe partial struct ID3D12DeviceTools1 : ID3D12DeviceTools1.Interface, INativeGuid
{
	public static ref readonly Guid IID_ID3D12DeviceTools1
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			ReadOnlySpan<byte> data = [
				0xC7, 0x9F, 0x0E, 0xE3,
				0x41, 0xE6,
				0x6E, 0x4D,
				0x8A,
				0x81,
				0x9D,
				0xD9,
				0x20,
				0x6E,
				0xC4,
				0x7A
			];

			Debug.Assert(data.Length == Unsafe.SizeOf<Guid>());
			return ref Unsafe.As<byte, Guid>(ref MemoryMarshal.GetReference(data));
		}
	}

	static Guid* INativeGuid.NativeGuid => (Guid*)Unsafe.AsPointer(ref Unsafe.AsRef(in IID_ID3D12DeviceTools1));

	public void** lpVtbl;

	/// <inheritdoc cref="IUnknown.QueryInterface" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(0)]
	public HResult QueryInterface([NativeTypeName("const IID &")] Guid* riid, void** ppvObject)
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D12DeviceTools1*, Guid*, void**, int>)(lpVtbl[0]))((ID3D12DeviceTools1*)Unsafe.AsPointer(ref this), riid, ppvObject);
	}

	/// <inheritdoc cref="IUnknown.AddRef" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(1)]
	[return: NativeTypeName("ULONG")]
	public uint AddRef()
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D12DeviceTools1*, uint>)(lpVtbl[1]))((ID3D12DeviceTools1*)Unsafe.AsPointer(ref this));
	}

	/// <inheritdoc cref="IUnknown.Release" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(2)]
	[return: NativeTypeName("ULONG")]
	public uint Release()
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D12DeviceTools1*, uint>)(lpVtbl[2]))((ID3D12DeviceTools1*)Unsafe.AsPointer(ref this));
	}

	/// <inheritdoc cref="ID3D12DeviceTools.SetNextAllocationAddress" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(3)]
	public void SetNextAllocationAddress(ulong nextAllocationVirtualAddress)
	{
		((delegate* unmanaged[MemberFunction]<ID3D12DeviceTools1*, ulong, void>)(lpVtbl[3]))((ID3D12DeviceTools1*)Unsafe.AsPointer(ref this), nextAllocationVirtualAddress);
	}

	/// <include file='../Direct3D12.xml' path='doc/member[@name="ID3D12DeviceTools1::GetApplicationSpecificDriverState"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(4)]
	public HResult GetApplicationSpecificDriverState(Graphics.Direct3D.ID3DBlob** ppBlob)
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D12DeviceTools1*, Graphics.Direct3D.ID3DBlob**, int>)(lpVtbl[4]))((ID3D12DeviceTools1*)Unsafe.AsPointer(ref this), ppBlob);
	}

	/// <include file='../Direct3D12.xml' path='doc/member[@name="ID3D12DeviceTools1::GetApplicationSpecificDriverBlobStatus"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(5)]
	public ApplicationSpecificDriverBlobStatus GetApplicationSpecificDriverBlobStatus()
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D12DeviceTools1*, ApplicationSpecificDriverBlobStatus>)(lpVtbl[5]))((ID3D12DeviceTools1*)Unsafe.AsPointer(ref this));
	}

	public interface Interface : ID3D12DeviceTools.Interface
	{
		[VtblIndex(4)]
		HResult GetApplicationSpecificDriverState(Graphics.Direct3D.ID3DBlob** ppBlob);

		[VtblIndex(5)]
		ApplicationSpecificDriverBlobStatus GetApplicationSpecificDriverBlobStatus();
	}
}

