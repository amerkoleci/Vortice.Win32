// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

namespace Win32.Graphics.Direct3D12;

/// <include file='../Direct3D12.xml' path='doc/member[@name="ID3D12Tools2"]/*' />
/// <unmanaged>ID3D12Tools2</unmanaged>
[Guid("01d393c5-c9b0-42a1-958c-c26b02d4d097")]
[NativeTypeName("struct ID3D12Tools2 : ID3D12Tools1")]
[NativeInheritance("ID3D12Tools1")]
public unsafe partial struct ID3D12Tools2 : ID3D12Tools2.Interface, INativeGuid
{
	public static ref readonly Guid IID_ID3D12Tools2
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			ReadOnlySpan<byte> data = [
				0xC5, 0x93, 0xD3, 0x01,
				0xB0, 0xC9,
				0xA1, 0x42,
				0x95,
				0x8C,
				0xC2,
				0x6B,
				0x02,
				0xD4,
				0xD0,
				0x97
			];

			Debug.Assert(data.Length == Unsafe.SizeOf<Guid>());
			return ref Unsafe.As<byte, Guid>(ref MemoryMarshal.GetReference(data));
		}
	}

	static Guid* INativeGuid.NativeGuid => (Guid*)Unsafe.AsPointer(ref Unsafe.AsRef(in IID_ID3D12Tools2));

	public void** lpVtbl;

	/// <inheritdoc cref="IUnknown.QueryInterface" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(0)]
	public HResult QueryInterface([NativeTypeName("const IID &")] Guid* riid, void** ppvObject)
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D12Tools2*, Guid*, void**, int>)(lpVtbl[0]))((ID3D12Tools2*)Unsafe.AsPointer(ref this), riid, ppvObject);
	}

	/// <inheritdoc cref="IUnknown.AddRef" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(1)]
	[return: NativeTypeName("ULONG")]
	public uint AddRef()
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D12Tools2*, uint>)(lpVtbl[1]))((ID3D12Tools2*)Unsafe.AsPointer(ref this));
	}

	/// <inheritdoc cref="IUnknown.Release" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(2)]
	[return: NativeTypeName("ULONG")]
	public uint Release()
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D12Tools2*, uint>)(lpVtbl[2]))((ID3D12Tools2*)Unsafe.AsPointer(ref this));
	}

	/// <inheritdoc cref="ID3D12Tools.EnableShaderInstrumentation" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(3)]
	public void EnableShaderInstrumentation(Bool32 bEnable)
	{
		((delegate* unmanaged[MemberFunction]<ID3D12Tools2*, Bool32, void>)(lpVtbl[3]))((ID3D12Tools2*)Unsafe.AsPointer(ref this), bEnable);
	}

	/// <inheritdoc cref="ID3D12Tools.ShaderInstrumentationEnabled" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(4)]
	public Bool32 ShaderInstrumentationEnabled()
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D12Tools2*, Bool32>)(lpVtbl[4]))((ID3D12Tools2*)Unsafe.AsPointer(ref this));
	}

	/// <inheritdoc cref="ID3D12Tools1.ReserveGPUVARangesAtCreate" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(5)]
	public HResult ReserveGPUVARangesAtCreate(GpuVirtualAddressRange* pRanges, uint uiNumRanges)
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D12Tools2*, GpuVirtualAddressRange*, uint, int>)(lpVtbl[5]))((ID3D12Tools2*)Unsafe.AsPointer(ref this), pRanges, uiNumRanges);
	}

	/// <inheritdoc cref="ID3D12Tools1.ClearReservedGPUVARangesList" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(6)]
	public void ClearReservedGPUVARangesList()
	{
		((delegate* unmanaged[MemberFunction]<ID3D12Tools2*, void>)(lpVtbl[6]))((ID3D12Tools2*)Unsafe.AsPointer(ref this));
	}

	/// <include file='../Direct3D12.xml' path='doc/member[@name="ID3D12Tools2::SetApplicationSpecificDriverState"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(7)]
	public HResult SetApplicationSpecificDriverState(IUnknown* pAdapter, Graphics.Direct3D.ID3DBlob* pBlob)
	{
		return ((delegate* unmanaged[MemberFunction]<ID3D12Tools2*, IUnknown*, Graphics.Direct3D.ID3DBlob*, int>)(lpVtbl[7]))((ID3D12Tools2*)Unsafe.AsPointer(ref this), pAdapter, pBlob);
	}

	public interface Interface : ID3D12Tools1.Interface
	{
		[VtblIndex(7)]
		HResult SetApplicationSpecificDriverState(IUnknown* pAdapter, Graphics.Direct3D.ID3DBlob* pBlob);
	}
}

