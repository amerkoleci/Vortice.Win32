// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

namespace Win32.Graphics.Direct3D12;

/// <include file='../Direct3D12.xml' path='doc/member[@name="ID3D12Device12"]/*' />
/// <unmanaged>ID3D12Device12</unmanaged>
[Guid("5af5c532-4c91-4cd0-b541-15a405395fc5")]
[NativeTypeName("struct ID3D12Device12 : ID3D12Device11")]
[NativeInheritance("ID3D12Device11")]
public unsafe partial struct ID3D12Device12 : ID3D12Device12.Interface, INativeGuid
{
	public static ref readonly Guid IID_ID3D12Device12
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		get
		{
			ReadOnlySpan<byte> data = new byte[] {
				0x32, 0xC5, 0xF5, 0x5A,
				0x91, 0x4C,
				0xD0, 0x4C,
				0xB5,
				0x41,
				0x15,
				0xA4,
				0x05,
				0x39,
				0x5F,
				0xC5
			};

			Debug.Assert(data.Length == Unsafe.SizeOf<Guid>());
			return ref Unsafe.As<byte, Guid>(ref MemoryMarshal.GetReference(data));
		}
	}

#if NET6_0_OR_GREATER
	static Guid* INativeGuid.NativeGuid => (Guid*)Unsafe.AsPointer(ref Unsafe.AsRef(in IID_ID3D12Device12));
#else
	public static Guid* NativeGuid => (Guid*)Unsafe.AsPointer(ref Unsafe.AsRef(in IID_ID3D12Device12));
#endif

	public void** lpVtbl;

	/// <inheritdoc cref="IUnknown.QueryInterface" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(0)]
	public HResult QueryInterface([NativeTypeName("const IID &")] Guid* riid, void** ppvObject)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, Guid*, void**, int>)(lpVtbl[0]))((ID3D12Device12*)Unsafe.AsPointer(ref this), riid, ppvObject);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, Guid*, void**, int>)(lpVtbl[0]))((ID3D12Device12*)Unsafe.AsPointer(ref this), riid, ppvObject);
#endif
	}

	/// <inheritdoc cref="IUnknown.AddRef" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(1)]
	[return: NativeTypeName("ULONG")]
	public uint AddRef()
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, uint>)(lpVtbl[1]))((ID3D12Device12*)Unsafe.AsPointer(ref this));
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, uint>)(lpVtbl[1]))((ID3D12Device12*)Unsafe.AsPointer(ref this));
#endif
	}

	/// <inheritdoc cref="IUnknown.Release" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(2)]
	[return: NativeTypeName("ULONG")]
	public uint Release()
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, uint>)(lpVtbl[2]))((ID3D12Device12*)Unsafe.AsPointer(ref this));
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, uint>)(lpVtbl[2]))((ID3D12Device12*)Unsafe.AsPointer(ref this));
#endif
	}

	/// <inheritdoc cref="ID3D12Object.GetPrivateData" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(3)]
	public HResult GetPrivateData(Guid* guid, uint* pDataSize, void* pData)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, Guid*, uint*, void*, int>)(lpVtbl[3]))((ID3D12Device12*)Unsafe.AsPointer(ref this), guid, pDataSize, pData);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, Guid*, uint*, void*, int>)(lpVtbl[3]))((ID3D12Device12*)Unsafe.AsPointer(ref this), guid, pDataSize, pData);
#endif
	}

	/// <inheritdoc cref="ID3D12Object.SetPrivateData" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(4)]
	public HResult SetPrivateData(Guid* guid, uint DataSize, void* pData)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, Guid*, uint, void*, int>)(lpVtbl[4]))((ID3D12Device12*)Unsafe.AsPointer(ref this), guid, DataSize, pData);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, Guid*, uint, void*, int>)(lpVtbl[4]))((ID3D12Device12*)Unsafe.AsPointer(ref this), guid, DataSize, pData);
#endif
	}

	/// <inheritdoc cref="ID3D12Object.SetPrivateDataInterface" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(5)]
	public HResult SetPrivateDataInterface(Guid* guid, IUnknown* pData)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, Guid*, IUnknown*, int>)(lpVtbl[5]))((ID3D12Device12*)Unsafe.AsPointer(ref this), guid, pData);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, Guid*, IUnknown*, int>)(lpVtbl[5]))((ID3D12Device12*)Unsafe.AsPointer(ref this), guid, pData);
#endif
	}

	/// <inheritdoc cref="ID3D12Object.SetName" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(6)]
	public HResult SetName(ushort* Name)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ushort*, int>)(lpVtbl[6]))((ID3D12Device12*)Unsafe.AsPointer(ref this), Name);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ushort*, int>)(lpVtbl[6]))((ID3D12Device12*)Unsafe.AsPointer(ref this), Name);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.GetNodeCount" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(7)]
	public uint GetNodeCount()
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, uint>)(lpVtbl[7]))((ID3D12Device12*)Unsafe.AsPointer(ref this));
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, uint>)(lpVtbl[7]))((ID3D12Device12*)Unsafe.AsPointer(ref this));
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateCommandQueue" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(8)]
	public HResult CreateCommandQueue(CommandQueueDescription* pDesc, Guid* riid, void** ppCommandQueue)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, CommandQueueDescription*, Guid*, void**, int>)(lpVtbl[8]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppCommandQueue);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, CommandQueueDescription*, Guid*, void**, int>)(lpVtbl[8]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppCommandQueue);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateCommandAllocator" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(9)]
	public HResult CreateCommandAllocator(CommandListType type, Guid* riid, void** ppCommandAllocator)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, CommandListType, Guid*, void**, int>)(lpVtbl[9]))((ID3D12Device12*)Unsafe.AsPointer(ref this), type, riid, ppCommandAllocator);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, CommandListType, Guid*, void**, int>)(lpVtbl[9]))((ID3D12Device12*)Unsafe.AsPointer(ref this), type, riid, ppCommandAllocator);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateGraphicsPipelineState" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(10)]
	public HResult CreateGraphicsPipelineState(GraphicsPipelineStateDescription* pDesc, Guid* riid, void** ppPipelineState)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, GraphicsPipelineStateDescription*, Guid*, void**, int>)(lpVtbl[10]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppPipelineState);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, GraphicsPipelineStateDescription*, Guid*, void**, int>)(lpVtbl[10]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppPipelineState);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateComputePipelineState" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(11)]
	public HResult CreateComputePipelineState(ComputePipelineStateDescription* pDesc, Guid* riid, void** ppPipelineState)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ComputePipelineStateDescription*, Guid*, void**, int>)(lpVtbl[11]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppPipelineState);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ComputePipelineStateDescription*, Guid*, void**, int>)(lpVtbl[11]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppPipelineState);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateCommandList" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(12)]
	public HResult CreateCommandList(uint nodeMask, CommandListType type, ID3D12CommandAllocator* pCommandAllocator, ID3D12PipelineState* pInitialState, Guid* riid, void** ppCommandList)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, int>)(lpVtbl[12]))((ID3D12Device12*)Unsafe.AsPointer(ref this), nodeMask, type, pCommandAllocator, pInitialState, riid, ppCommandList);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, uint, CommandListType, ID3D12CommandAllocator*, ID3D12PipelineState*, Guid*, void**, int>)(lpVtbl[12]))((ID3D12Device12*)Unsafe.AsPointer(ref this), nodeMask, type, pCommandAllocator, pInitialState, riid, ppCommandList);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CheckFeatureSupport" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(13)]
	public HResult CheckFeatureSupport(Feature Feature, void* pFeatureSupportData, int FeatureSupportDataSize)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, Feature, void*, int, int>)(lpVtbl[13]))((ID3D12Device12*)Unsafe.AsPointer(ref this), Feature, pFeatureSupportData, FeatureSupportDataSize);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, Feature, void*, int, int>)(lpVtbl[13]))((ID3D12Device12*)Unsafe.AsPointer(ref this), Feature, pFeatureSupportData, FeatureSupportDataSize);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateDescriptorHeap" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(14)]
	public HResult CreateDescriptorHeap(DescriptorHeapDescription* pDescriptorHeapDesc, Guid* riid, void** ppvHeap)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, DescriptorHeapDescription*, Guid*, void**, int>)(lpVtbl[14]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDescriptorHeapDesc, riid, ppvHeap);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, DescriptorHeapDescription*, Guid*, void**, int>)(lpVtbl[14]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDescriptorHeapDesc, riid, ppvHeap);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.GetDescriptorHandleIncrementSize" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(15)]
	public uint GetDescriptorHandleIncrementSize(DescriptorHeapType DescriptorHeapType)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, DescriptorHeapType, uint>)(lpVtbl[15]))((ID3D12Device12*)Unsafe.AsPointer(ref this), DescriptorHeapType);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, DescriptorHeapType, uint>)(lpVtbl[15]))((ID3D12Device12*)Unsafe.AsPointer(ref this), DescriptorHeapType);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateRootSignature" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(16)]
	public HResult CreateRootSignature(uint nodeMask, void* pBlobWithRootSignature, nuint blobLengthInBytes, Guid* riid, void** ppvRootSignature)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, uint, void*, nuint, Guid*, void**, int>)(lpVtbl[16]))((ID3D12Device12*)Unsafe.AsPointer(ref this), nodeMask, pBlobWithRootSignature, blobLengthInBytes, riid, ppvRootSignature);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, uint, void*, nuint, Guid*, void**, int>)(lpVtbl[16]))((ID3D12Device12*)Unsafe.AsPointer(ref this), nodeMask, pBlobWithRootSignature, blobLengthInBytes, riid, ppvRootSignature);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateConstantBufferView" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(17)]
	public void CreateConstantBufferView(ConstantBufferViewDescription* pDesc, CpuDescriptorHandle DestDescriptor)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<ID3D12Device12*, ConstantBufferViewDescription*, CpuDescriptorHandle, void>)(lpVtbl[17]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, DestDescriptor);
#else
		((delegate* unmanaged[Stdcall]<ID3D12Device12*, ConstantBufferViewDescription*, CpuDescriptorHandle, void>)(lpVtbl[17]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, DestDescriptor);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateShaderResourceView" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(18)]
	public void CreateShaderResourceView(ID3D12Resource* pResource, ShaderResourceViewDescription* pDesc, CpuDescriptorHandle DestDescriptor)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<ID3D12Device12*, ID3D12Resource*, ShaderResourceViewDescription*, CpuDescriptorHandle, void>)(lpVtbl[18]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pResource, pDesc, DestDescriptor);
#else
		((delegate* unmanaged[Stdcall]<ID3D12Device12*, ID3D12Resource*, ShaderResourceViewDescription*, CpuDescriptorHandle, void>)(lpVtbl[18]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pResource, pDesc, DestDescriptor);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateUnorderedAccessView" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(19)]
	public void CreateUnorderedAccessView(ID3D12Resource* pResource, ID3D12Resource* pCounterResource, UnorderedAccessViewDescription* pDesc, CpuDescriptorHandle DestDescriptor)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<ID3D12Device12*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDescription*, CpuDescriptorHandle, void>)(lpVtbl[19]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pResource, pCounterResource, pDesc, DestDescriptor);
#else
		((delegate* unmanaged[Stdcall]<ID3D12Device12*, ID3D12Resource*, ID3D12Resource*, UnorderedAccessViewDescription*, CpuDescriptorHandle, void>)(lpVtbl[19]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pResource, pCounterResource, pDesc, DestDescriptor);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateRenderTargetView" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(20)]
	public void CreateRenderTargetView(ID3D12Resource* pResource, RenderTargetViewDescription* pDesc, CpuDescriptorHandle DestDescriptor)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<ID3D12Device12*, ID3D12Resource*, RenderTargetViewDescription*, CpuDescriptorHandle, void>)(lpVtbl[20]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pResource, pDesc, DestDescriptor);
#else
		((delegate* unmanaged[Stdcall]<ID3D12Device12*, ID3D12Resource*, RenderTargetViewDescription*, CpuDescriptorHandle, void>)(lpVtbl[20]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pResource, pDesc, DestDescriptor);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateDepthStencilView" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(21)]
	public void CreateDepthStencilView(ID3D12Resource* pResource, DepthStencilViewDescription* pDesc, CpuDescriptorHandle DestDescriptor)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<ID3D12Device12*, ID3D12Resource*, DepthStencilViewDescription*, CpuDescriptorHandle, void>)(lpVtbl[21]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pResource, pDesc, DestDescriptor);
#else
		((delegate* unmanaged[Stdcall]<ID3D12Device12*, ID3D12Resource*, DepthStencilViewDescription*, CpuDescriptorHandle, void>)(lpVtbl[21]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pResource, pDesc, DestDescriptor);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateSampler" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(22)]
	public void CreateSampler(SamplerDescription* pDesc, CpuDescriptorHandle DestDescriptor)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<ID3D12Device12*, SamplerDescription*, CpuDescriptorHandle, void>)(lpVtbl[22]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, DestDescriptor);
#else
		((delegate* unmanaged[Stdcall]<ID3D12Device12*, SamplerDescription*, CpuDescriptorHandle, void>)(lpVtbl[22]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, DestDescriptor);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CopyDescriptors" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(23)]
	public void CopyDescriptors(uint NumDestDescriptorRanges, CpuDescriptorHandle* pDestDescriptorRangeStarts, uint* pDestDescriptorRangeSizes, uint NumSrcDescriptorRanges, CpuDescriptorHandle* pSrcDescriptorRangeStarts, uint* pSrcDescriptorRangeSizes, DescriptorHeapType DescriptorHeapsType)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<ID3D12Device12*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(lpVtbl[23]))((ID3D12Device12*)Unsafe.AsPointer(ref this), NumDestDescriptorRanges, pDestDescriptorRangeStarts, pDestDescriptorRangeSizes, NumSrcDescriptorRanges, pSrcDescriptorRangeStarts, pSrcDescriptorRangeSizes, DescriptorHeapsType);
#else
		((delegate* unmanaged[Stdcall]<ID3D12Device12*, uint, CpuDescriptorHandle*, uint*, uint, CpuDescriptorHandle*, uint*, DescriptorHeapType, void>)(lpVtbl[23]))((ID3D12Device12*)Unsafe.AsPointer(ref this), NumDestDescriptorRanges, pDestDescriptorRangeStarts, pDestDescriptorRangeSizes, NumSrcDescriptorRanges, pSrcDescriptorRangeStarts, pSrcDescriptorRangeSizes, DescriptorHeapsType);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CopyDescriptorsSimple" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(24)]
	public void CopyDescriptorsSimple(uint NumDescriptors, CpuDescriptorHandle DestDescriptorRangeStart, CpuDescriptorHandle SrcDescriptorRangeStart, DescriptorHeapType DescriptorHeapsType)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<ID3D12Device12*, uint, CpuDescriptorHandle, CpuDescriptorHandle, DescriptorHeapType, void>)(lpVtbl[24]))((ID3D12Device12*)Unsafe.AsPointer(ref this), NumDescriptors, DestDescriptorRangeStart, SrcDescriptorRangeStart, DescriptorHeapsType);
#else
		((delegate* unmanaged[Stdcall]<ID3D12Device12*, uint, CpuDescriptorHandle, CpuDescriptorHandle, DescriptorHeapType, void>)(lpVtbl[24]))((ID3D12Device12*)Unsafe.AsPointer(ref this), NumDescriptors, DestDescriptorRangeStart, SrcDescriptorRangeStart, DescriptorHeapsType);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.GetResourceAllocationInfo" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(25)]
	public ResourceAllocationInfo GetResourceAllocationInfo(uint visibleMask, uint numResourceDescs, ResourceDescription* pResourceDescs)
	{
		ResourceAllocationInfo result;
#if NET6_0_OR_GREATER
		return *((delegate* unmanaged<ID3D12Device12*, ResourceAllocationInfo*, uint, uint, ResourceDescription*, ResourceAllocationInfo*>)(lpVtbl[25]))((ID3D12Device12*)Unsafe.AsPointer(ref this), &result, visibleMask, numResourceDescs, pResourceDescs);
#else
		return *((delegate* unmanaged[Stdcall]<ID3D12Device12*, ResourceAllocationInfo*, uint, uint, ResourceDescription*, ResourceAllocationInfo*>)(lpVtbl[25]))((ID3D12Device12*)Unsafe.AsPointer(ref this), &result, visibleMask, numResourceDescs, pResourceDescs);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.GetCustomHeapProperties" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(26)]
	public HeapProperties GetCustomHeapProperties(uint nodeMask, HeapType heapType)
	{
		HeapProperties result;
#if NET6_0_OR_GREATER
		return *((delegate* unmanaged<ID3D12Device12*, HeapProperties*, uint, HeapType, HeapProperties*>)(lpVtbl[26]))((ID3D12Device12*)Unsafe.AsPointer(ref this), &result, nodeMask, heapType);
#else
		return *((delegate* unmanaged[Stdcall]<ID3D12Device12*, HeapProperties*, uint, HeapType, HeapProperties*>)(lpVtbl[26]))((ID3D12Device12*)Unsafe.AsPointer(ref this), &result, nodeMask, heapType);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateCommittedResource" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(27)]
	public HResult CreateCommittedResource(HeapProperties* pHeapProperties, HeapFlags HeapFlags, ResourceDescription* pDesc, ResourceStates InitialResourceState, ClearValue* pOptimizedClearValue, Guid* riidResource, void** ppvResource)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, HeapProperties*, HeapFlags, ResourceDescription*, ResourceStates, ClearValue*, Guid*, void**, int>)(lpVtbl[27]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pHeapProperties, HeapFlags, pDesc, InitialResourceState, pOptimizedClearValue, riidResource, ppvResource);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, HeapProperties*, HeapFlags, ResourceDescription*, ResourceStates, ClearValue*, Guid*, void**, int>)(lpVtbl[27]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pHeapProperties, HeapFlags, pDesc, InitialResourceState, pOptimizedClearValue, riidResource, ppvResource);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateHeap" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(28)]
	public HResult CreateHeap(HeapDescription* pDesc, Guid* riid, void** ppvHeap)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, HeapDescription*, Guid*, void**, int>)(lpVtbl[28]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppvHeap);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, HeapDescription*, Guid*, void**, int>)(lpVtbl[28]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppvHeap);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreatePlacedResource" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(29)]
	public HResult CreatePlacedResource(ID3D12Heap* pHeap, ulong HeapOffset, ResourceDescription* pDesc, ResourceStates InitialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ID3D12Heap*, ulong, ResourceDescription*, ResourceStates, ClearValue*, Guid*, void**, int>)(lpVtbl[29]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pHeap, HeapOffset, pDesc, InitialState, pOptimizedClearValue, riid, ppvResource);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ID3D12Heap*, ulong, ResourceDescription*, ResourceStates, ClearValue*, Guid*, void**, int>)(lpVtbl[29]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pHeap, HeapOffset, pDesc, InitialState, pOptimizedClearValue, riid, ppvResource);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateReservedResource" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(30)]
	public HResult CreateReservedResource(ResourceDescription* pDesc, ResourceStates InitialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ResourceDescription*, ResourceStates, ClearValue*, Guid*, void**, int>)(lpVtbl[30]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, InitialState, pOptimizedClearValue, riid, ppvResource);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ResourceDescription*, ResourceStates, ClearValue*, Guid*, void**, int>)(lpVtbl[30]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, InitialState, pOptimizedClearValue, riid, ppvResource);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateSharedHandle" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(31)]
	public HResult CreateSharedHandle(ID3D12DeviceChild* pObject, Security.SECURITY_ATTRIBUTES* pAttributes, uint Access, ushort* Name, Handle* pHandle)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ID3D12DeviceChild*, Security.SECURITY_ATTRIBUTES*, uint, ushort*, Handle*, int>)(lpVtbl[31]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pObject, pAttributes, Access, Name, pHandle);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ID3D12DeviceChild*, Security.SECURITY_ATTRIBUTES*, uint, ushort*, Handle*, int>)(lpVtbl[31]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pObject, pAttributes, Access, Name, pHandle);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.OpenSharedHandle" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(32)]
	public HResult OpenSharedHandle(Handle NTHandle, Guid* riid, void** ppvObj)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, Handle, Guid*, void**, int>)(lpVtbl[32]))((ID3D12Device12*)Unsafe.AsPointer(ref this), NTHandle, riid, ppvObj);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, Handle, Guid*, void**, int>)(lpVtbl[32]))((ID3D12Device12*)Unsafe.AsPointer(ref this), NTHandle, riid, ppvObj);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.OpenSharedHandleByName" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(33)]
	public HResult OpenSharedHandleByName(ushort* Name, uint Access, Handle* pNTHandle)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ushort*, uint, Handle*, int>)(lpVtbl[33]))((ID3D12Device12*)Unsafe.AsPointer(ref this), Name, Access, pNTHandle);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ushort*, uint, Handle*, int>)(lpVtbl[33]))((ID3D12Device12*)Unsafe.AsPointer(ref this), Name, Access, pNTHandle);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.MakeResident" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(34)]
	public HResult MakeResident(uint NumObjects, ID3D12Pageable** ppObjects)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, uint, ID3D12Pageable**, int>)(lpVtbl[34]))((ID3D12Device12*)Unsafe.AsPointer(ref this), NumObjects, ppObjects);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, uint, ID3D12Pageable**, int>)(lpVtbl[34]))((ID3D12Device12*)Unsafe.AsPointer(ref this), NumObjects, ppObjects);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.Evict" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(35)]
	public HResult Evict(uint NumObjects, ID3D12Pageable** ppObjects)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, uint, ID3D12Pageable**, int>)(lpVtbl[35]))((ID3D12Device12*)Unsafe.AsPointer(ref this), NumObjects, ppObjects);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, uint, ID3D12Pageable**, int>)(lpVtbl[35]))((ID3D12Device12*)Unsafe.AsPointer(ref this), NumObjects, ppObjects);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateFence" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(36)]
	public HResult CreateFence(ulong InitialValue, FenceFlags Flags, Guid* riid, void** ppFence)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ulong, FenceFlags, Guid*, void**, int>)(lpVtbl[36]))((ID3D12Device12*)Unsafe.AsPointer(ref this), InitialValue, Flags, riid, ppFence);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ulong, FenceFlags, Guid*, void**, int>)(lpVtbl[36]))((ID3D12Device12*)Unsafe.AsPointer(ref this), InitialValue, Flags, riid, ppFence);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.GetDeviceRemovedReason" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(37)]
	public HResult GetDeviceRemovedReason()
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, int>)(lpVtbl[37]))((ID3D12Device12*)Unsafe.AsPointer(ref this));
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, int>)(lpVtbl[37]))((ID3D12Device12*)Unsafe.AsPointer(ref this));
#endif
	}

	/// <inheritdoc cref="ID3D12Device.GetCopyableFootprints" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(38)]
	public void GetCopyableFootprints(ResourceDescription* pResourceDesc, uint FirstSubresource, uint NumSubresources, ulong BaseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<ID3D12Device12*, ResourceDescription*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(lpVtbl[38]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pResourceDesc, FirstSubresource, NumSubresources, BaseOffset, pLayouts, pNumRows, pRowSizeInBytes, pTotalBytes);
#else
		((delegate* unmanaged[Stdcall]<ID3D12Device12*, ResourceDescription*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(lpVtbl[38]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pResourceDesc, FirstSubresource, NumSubresources, BaseOffset, pLayouts, pNumRows, pRowSizeInBytes, pTotalBytes);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateQueryHeap" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(39)]
	public HResult CreateQueryHeap(QueryHeapDescription* pDesc, Guid* riid, void** ppvHeap)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, QueryHeapDescription*, Guid*, void**, int>)(lpVtbl[39]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppvHeap);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, QueryHeapDescription*, Guid*, void**, int>)(lpVtbl[39]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppvHeap);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.SetStablePowerState" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(40)]
	public HResult SetStablePowerState(Bool32 Enable)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, Bool32, int>)(lpVtbl[40]))((ID3D12Device12*)Unsafe.AsPointer(ref this), Enable);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, Bool32, int>)(lpVtbl[40]))((ID3D12Device12*)Unsafe.AsPointer(ref this), Enable);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.CreateCommandSignature" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(41)]
	public HResult CreateCommandSignature(CommandSignatureDescription* pDesc, ID3D12RootSignature* pRootSignature, Guid* riid, void** ppvCommandSignature)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, CommandSignatureDescription*, ID3D12RootSignature*, Guid*, void**, int>)(lpVtbl[41]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, pRootSignature, riid, ppvCommandSignature);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, CommandSignatureDescription*, ID3D12RootSignature*, Guid*, void**, int>)(lpVtbl[41]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, pRootSignature, riid, ppvCommandSignature);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.GetResourceTiling" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(42)]
	public void GetResourceTiling(ID3D12Resource* pTiledResource, uint* pNumTilesForEntireResource, PackedMipInfo* pPackedMipDesc, TileShape* pStandardTileShapeForNonPackedMips, uint* pNumSubresourceTilings, uint FirstSubresourceTilingToGet, SubresourceTiling* pSubresourceTilingsForNonPackedMips)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<ID3D12Device12*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(lpVtbl[42]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, FirstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
#else
		((delegate* unmanaged[Stdcall]<ID3D12Device12*, ID3D12Resource*, uint*, PackedMipInfo*, TileShape*, uint*, uint, SubresourceTiling*, void>)(lpVtbl[42]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pTiledResource, pNumTilesForEntireResource, pPackedMipDesc, pStandardTileShapeForNonPackedMips, pNumSubresourceTilings, FirstSubresourceTilingToGet, pSubresourceTilingsForNonPackedMips);
#endif
	}

	/// <inheritdoc cref="ID3D12Device.GetAdapterLuid" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(43)]
	public Luid GetAdapterLuid()
	{
		Luid result;
#if NET6_0_OR_GREATER
		return *((delegate* unmanaged<ID3D12Device12*, Luid*, Luid*>)(lpVtbl[43]))((ID3D12Device12*)Unsafe.AsPointer(ref this), &result);
#else
		return *((delegate* unmanaged[Stdcall]<ID3D12Device12*, Luid*, Luid*>)(lpVtbl[43]))((ID3D12Device12*)Unsafe.AsPointer(ref this), &result);
#endif
	}

	/// <inheritdoc cref="ID3D12Device1.CreatePipelineLibrary" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(44)]
	public HResult CreatePipelineLibrary(void* pLibraryBlob, nuint BlobLength, Guid* riid, void** ppPipelineLibrary)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, void*, nuint, Guid*, void**, int>)(lpVtbl[44]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pLibraryBlob, BlobLength, riid, ppPipelineLibrary);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, void*, nuint, Guid*, void**, int>)(lpVtbl[44]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pLibraryBlob, BlobLength, riid, ppPipelineLibrary);
#endif
	}

	/// <inheritdoc cref="ID3D12Device1.SetEventOnMultipleFenceCompletion" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(45)]
	public HResult SetEventOnMultipleFenceCompletion(ID3D12Fence** ppFences, ulong* pFenceValues, uint NumFences, MultipleFenceWaitFlags Flags, Handle hEvent)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ID3D12Fence**, ulong*, uint, MultipleFenceWaitFlags, Handle, int>)(lpVtbl[45]))((ID3D12Device12*)Unsafe.AsPointer(ref this), ppFences, pFenceValues, NumFences, Flags, hEvent);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ID3D12Fence**, ulong*, uint, MultipleFenceWaitFlags, Handle, int>)(lpVtbl[45]))((ID3D12Device12*)Unsafe.AsPointer(ref this), ppFences, pFenceValues, NumFences, Flags, hEvent);
#endif
	}

	/// <inheritdoc cref="ID3D12Device1.SetResidencyPriority" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(46)]
	public HResult SetResidencyPriority(uint NumObjects, ID3D12Pageable** ppObjects, ResidencyPriority* pPriorities)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, uint, ID3D12Pageable**, ResidencyPriority*, int>)(lpVtbl[46]))((ID3D12Device12*)Unsafe.AsPointer(ref this), NumObjects, ppObjects, pPriorities);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, uint, ID3D12Pageable**, ResidencyPriority*, int>)(lpVtbl[46]))((ID3D12Device12*)Unsafe.AsPointer(ref this), NumObjects, ppObjects, pPriorities);
#endif
	}

	/// <inheritdoc cref="ID3D12Device2.CreatePipelineState" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(47)]
	public HResult CreatePipelineState(PipelineStateStreamDescription* pDesc, Guid* riid, void** ppPipelineState)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, PipelineStateStreamDescription*, Guid*, void**, int>)(lpVtbl[47]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppPipelineState);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, PipelineStateStreamDescription*, Guid*, void**, int>)(lpVtbl[47]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppPipelineState);
#endif
	}

	/// <inheritdoc cref="ID3D12Device3.OpenExistingHeapFromAddress" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(48)]
	public HResult OpenExistingHeapFromAddress(void* pAddress, Guid* riid, void** ppvHeap)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, void*, Guid*, void**, int>)(lpVtbl[48]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pAddress, riid, ppvHeap);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, void*, Guid*, void**, int>)(lpVtbl[48]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pAddress, riid, ppvHeap);
#endif
	}

	/// <inheritdoc cref="ID3D12Device3.OpenExistingHeapFromFileMapping" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(49)]
	public HResult OpenExistingHeapFromFileMapping(Handle hFileMapping, Guid* riid, void** ppvHeap)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, Handle, Guid*, void**, int>)(lpVtbl[49]))((ID3D12Device12*)Unsafe.AsPointer(ref this), hFileMapping, riid, ppvHeap);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, Handle, Guid*, void**, int>)(lpVtbl[49]))((ID3D12Device12*)Unsafe.AsPointer(ref this), hFileMapping, riid, ppvHeap);
#endif
	}

	/// <inheritdoc cref="ID3D12Device3.EnqueueMakeResident" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(50)]
	public HResult EnqueueMakeResident(ResidencyFlags Flags, uint NumObjects, ID3D12Pageable** ppObjects, ID3D12Fence* pFenceToSignal, ulong FenceValueToSignal)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ResidencyFlags, uint, ID3D12Pageable**, ID3D12Fence*, ulong, int>)(lpVtbl[50]))((ID3D12Device12*)Unsafe.AsPointer(ref this), Flags, NumObjects, ppObjects, pFenceToSignal, FenceValueToSignal);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ResidencyFlags, uint, ID3D12Pageable**, ID3D12Fence*, ulong, int>)(lpVtbl[50]))((ID3D12Device12*)Unsafe.AsPointer(ref this), Flags, NumObjects, ppObjects, pFenceToSignal, FenceValueToSignal);
#endif
	}

	/// <inheritdoc cref="ID3D12Device4.CreateCommandList1" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(51)]
	public HResult CreateCommandList1(uint nodeMask, CommandListType type, CommandListFlags flags, Guid* riid, void** ppCommandList)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, uint, CommandListType, CommandListFlags, Guid*, void**, int>)(lpVtbl[51]))((ID3D12Device12*)Unsafe.AsPointer(ref this), nodeMask, type, flags, riid, ppCommandList);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, uint, CommandListType, CommandListFlags, Guid*, void**, int>)(lpVtbl[51]))((ID3D12Device12*)Unsafe.AsPointer(ref this), nodeMask, type, flags, riid, ppCommandList);
#endif
	}

	/// <inheritdoc cref="ID3D12Device4.CreateProtectedResourceSession" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(52)]
	public HResult CreateProtectedResourceSession(ProtectedResourceSessionDescription* pDesc, Guid* riid, void** ppSession)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ProtectedResourceSessionDescription*, Guid*, void**, int>)(lpVtbl[52]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppSession);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ProtectedResourceSessionDescription*, Guid*, void**, int>)(lpVtbl[52]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppSession);
#endif
	}

	/// <inheritdoc cref="ID3D12Device4.CreateCommittedResource1" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(53)]
	public HResult CreateCommittedResource1(HeapProperties* pHeapProperties, HeapFlags HeapFlags, ResourceDescription* pDesc, ResourceStates InitialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, HeapProperties*, HeapFlags, ResourceDescription*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(lpVtbl[53]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pHeapProperties, HeapFlags, pDesc, InitialResourceState, pOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, HeapProperties*, HeapFlags, ResourceDescription*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(lpVtbl[53]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pHeapProperties, HeapFlags, pDesc, InitialResourceState, pOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
#endif
	}

	/// <inheritdoc cref="ID3D12Device4.CreateHeap1" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(54)]
	public HResult CreateHeap1(HeapDescription* pDesc, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riid, void** ppvHeap)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, HeapDescription*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(lpVtbl[54]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, pProtectedSession, riid, ppvHeap);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, HeapDescription*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(lpVtbl[54]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, pProtectedSession, riid, ppvHeap);
#endif
	}

	/// <inheritdoc cref="ID3D12Device4.CreateReservedResource1" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(55)]
	public HResult CreateReservedResource1(ResourceDescription* pDesc, ResourceStates InitialState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riid, void** ppvResource)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ResourceDescription*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(lpVtbl[55]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, InitialState, pOptimizedClearValue, pProtectedSession, riid, ppvResource);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ResourceDescription*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(lpVtbl[55]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, InitialState, pOptimizedClearValue, pProtectedSession, riid, ppvResource);
#endif
	}

	/// <inheritdoc cref="ID3D12Device4.GetResourceAllocationInfo1" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(56)]
	public ResourceAllocationInfo GetResourceAllocationInfo1(uint visibleMask, uint numResourceDescs, ResourceDescription* pResourceDescs, ResourceAllocationInfo1* pResourceAllocationInfo1)
	{
		ResourceAllocationInfo result;
#if NET6_0_OR_GREATER
		return *((delegate* unmanaged<ID3D12Device12*, ResourceAllocationInfo*, uint, uint, ResourceDescription*, ResourceAllocationInfo1*, ResourceAllocationInfo*>)(lpVtbl[56]))((ID3D12Device12*)Unsafe.AsPointer(ref this), &result, visibleMask, numResourceDescs, pResourceDescs, pResourceAllocationInfo1);
#else
		return *((delegate* unmanaged[Stdcall]<ID3D12Device12*, ResourceAllocationInfo*, uint, uint, ResourceDescription*, ResourceAllocationInfo1*, ResourceAllocationInfo*>)(lpVtbl[56]))((ID3D12Device12*)Unsafe.AsPointer(ref this), &result, visibleMask, numResourceDescs, pResourceDescs, pResourceAllocationInfo1);
#endif
	}

	/// <inheritdoc cref="ID3D12Device5.CreateLifetimeTracker" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(57)]
	public HResult CreateLifetimeTracker(ID3D12LifetimeOwner* pOwner, Guid* riid, void** ppvTracker)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ID3D12LifetimeOwner*, Guid*, void**, int>)(lpVtbl[57]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pOwner, riid, ppvTracker);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ID3D12LifetimeOwner*, Guid*, void**, int>)(lpVtbl[57]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pOwner, riid, ppvTracker);
#endif
	}

	/// <inheritdoc cref="ID3D12Device5.RemoveDevice" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(58)]
	public void RemoveDevice()
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<ID3D12Device12*, void>)(lpVtbl[58]))((ID3D12Device12*)Unsafe.AsPointer(ref this));
#else
		((delegate* unmanaged[Stdcall]<ID3D12Device12*, void>)(lpVtbl[58]))((ID3D12Device12*)Unsafe.AsPointer(ref this));
#endif
	}

	/// <inheritdoc cref="ID3D12Device5.EnumerateMetaCommands" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(59)]
	public HResult EnumerateMetaCommands(uint* pNumMetaCommands, MetaCommandDescription* pDescs)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, uint*, MetaCommandDescription*, int>)(lpVtbl[59]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pNumMetaCommands, pDescs);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, uint*, MetaCommandDescription*, int>)(lpVtbl[59]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pNumMetaCommands, pDescs);
#endif
	}

	/// <inheritdoc cref="ID3D12Device5.EnumerateMetaCommandParameters" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(60)]
	public HResult EnumerateMetaCommandParameters(Guid* CommandId, MetaCommandParameterStage Stage, uint* pTotalStructureSizeInBytes, uint* pParameterCount, MetaCommandParameterDescription* pParameterDescs)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDescription*, int>)(lpVtbl[60]))((ID3D12Device12*)Unsafe.AsPointer(ref this), CommandId, Stage, pTotalStructureSizeInBytes, pParameterCount, pParameterDescs);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, Guid*, MetaCommandParameterStage, uint*, uint*, MetaCommandParameterDescription*, int>)(lpVtbl[60]))((ID3D12Device12*)Unsafe.AsPointer(ref this), CommandId, Stage, pTotalStructureSizeInBytes, pParameterCount, pParameterDescs);
#endif
	}

	/// <inheritdoc cref="ID3D12Device5.CreateMetaCommand" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(61)]
	public HResult CreateMetaCommand(Guid* CommandId, uint NodeMask, void* pCreationParametersData, nuint CreationParametersDataSizeInBytes, Guid* riid, void** ppMetaCommand)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, Guid*, uint, void*, nuint, Guid*, void**, int>)(lpVtbl[61]))((ID3D12Device12*)Unsafe.AsPointer(ref this), CommandId, NodeMask, pCreationParametersData, CreationParametersDataSizeInBytes, riid, ppMetaCommand);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, Guid*, uint, void*, nuint, Guid*, void**, int>)(lpVtbl[61]))((ID3D12Device12*)Unsafe.AsPointer(ref this), CommandId, NodeMask, pCreationParametersData, CreationParametersDataSizeInBytes, riid, ppMetaCommand);
#endif
	}

	/// <inheritdoc cref="ID3D12Device5.CreateStateObject" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(62)]
	public HResult CreateStateObject(StateObjectDescription* pDesc, Guid* riid, void** ppStateObject)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, StateObjectDescription*, Guid*, void**, int>)(lpVtbl[62]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppStateObject);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, StateObjectDescription*, Guid*, void**, int>)(lpVtbl[62]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppStateObject);
#endif
	}

	/// <inheritdoc cref="ID3D12Device5.GetRaytracingAccelerationStructurePrebuildInfo" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(63)]
	public void GetRaytracingAccelerationStructurePrebuildInfo(BuildRaytracingAccelerationStructureInputs* pDesc, RaytracingAccelerationStructurePrebuildInfo* pInfo)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<ID3D12Device12*, BuildRaytracingAccelerationStructureInputs*, RaytracingAccelerationStructurePrebuildInfo*, void>)(lpVtbl[63]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, pInfo);
#else
		((delegate* unmanaged[Stdcall]<ID3D12Device12*, BuildRaytracingAccelerationStructureInputs*, RaytracingAccelerationStructurePrebuildInfo*, void>)(lpVtbl[63]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, pInfo);
#endif
	}

	/// <inheritdoc cref="ID3D12Device5.CheckDriverMatchingIdentifier" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(64)]
	public DriverMatchingIdentifierStatus CheckDriverMatchingIdentifier(SerializedDataType SerializedDataType, SerializedDataDriverMatchingIdentifier* pIdentifierToCheck)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, SerializedDataType, SerializedDataDriverMatchingIdentifier*, DriverMatchingIdentifierStatus>)(lpVtbl[64]))((ID3D12Device12*)Unsafe.AsPointer(ref this), SerializedDataType, pIdentifierToCheck);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, SerializedDataType, SerializedDataDriverMatchingIdentifier*, DriverMatchingIdentifierStatus>)(lpVtbl[64]))((ID3D12Device12*)Unsafe.AsPointer(ref this), SerializedDataType, pIdentifierToCheck);
#endif
	}

	/// <inheritdoc cref="ID3D12Device6.SetBackgroundProcessingMode" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(65)]
	public HResult SetBackgroundProcessingMode(BackgroundProcessingMode Mode, MeasurementsAction MeasurementsAction, Handle hEventToSignalUponCompletion, Bool32* pbFurtherMeasurementsDesired)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, BackgroundProcessingMode, MeasurementsAction, Handle, Bool32*, int>)(lpVtbl[65]))((ID3D12Device12*)Unsafe.AsPointer(ref this), Mode, MeasurementsAction, hEventToSignalUponCompletion, pbFurtherMeasurementsDesired);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, BackgroundProcessingMode, MeasurementsAction, Handle, Bool32*, int>)(lpVtbl[65]))((ID3D12Device12*)Unsafe.AsPointer(ref this), Mode, MeasurementsAction, hEventToSignalUponCompletion, pbFurtherMeasurementsDesired);
#endif
	}

	/// <inheritdoc cref="ID3D12Device7.AddToStateObject" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(66)]
	public HResult AddToStateObject(StateObjectDescription* pAddition, ID3D12StateObject* pStateObjectToGrowFrom, Guid* riid, void** ppNewStateObject)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, StateObjectDescription*, ID3D12StateObject*, Guid*, void**, int>)(lpVtbl[66]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pAddition, pStateObjectToGrowFrom, riid, ppNewStateObject);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, StateObjectDescription*, ID3D12StateObject*, Guid*, void**, int>)(lpVtbl[66]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pAddition, pStateObjectToGrowFrom, riid, ppNewStateObject);
#endif
	}

	/// <inheritdoc cref="ID3D12Device7.CreateProtectedResourceSession1" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(67)]
	public HResult CreateProtectedResourceSession1(ProtectedResourceSessionDescription1* pDesc, Guid* riid, void** ppSession)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ProtectedResourceSessionDescription1*, Guid*, void**, int>)(lpVtbl[67]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppSession);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ProtectedResourceSessionDescription1*, Guid*, void**, int>)(lpVtbl[67]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppSession);
#endif
	}

	/// <inheritdoc cref="ID3D12Device8.GetResourceAllocationInfo2" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(68)]
	public ResourceAllocationInfo GetResourceAllocationInfo2(uint visibleMask, uint numResourceDescs, ResourceDescription1* pResourceDescs, ResourceAllocationInfo1* pResourceAllocationInfo1)
	{
		ResourceAllocationInfo result;
#if NET6_0_OR_GREATER
		return *((delegate* unmanaged<ID3D12Device12*, ResourceAllocationInfo*, uint, uint, ResourceDescription1*, ResourceAllocationInfo1*, ResourceAllocationInfo*>)(lpVtbl[68]))((ID3D12Device12*)Unsafe.AsPointer(ref this), &result, visibleMask, numResourceDescs, pResourceDescs, pResourceAllocationInfo1);
#else
		return *((delegate* unmanaged[Stdcall]<ID3D12Device12*, ResourceAllocationInfo*, uint, uint, ResourceDescription1*, ResourceAllocationInfo1*, ResourceAllocationInfo*>)(lpVtbl[68]))((ID3D12Device12*)Unsafe.AsPointer(ref this), &result, visibleMask, numResourceDescs, pResourceDescs, pResourceAllocationInfo1);
#endif
	}

	/// <inheritdoc cref="ID3D12Device8.CreateCommittedResource2" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(69)]
	public HResult CreateCommittedResource2(HeapProperties* pHeapProperties, HeapFlags HeapFlags, ResourceDescription1* pDesc, ResourceStates InitialResourceState, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, Guid* riidResource, void** ppvResource)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, HeapProperties*, HeapFlags, ResourceDescription1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(lpVtbl[69]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pHeapProperties, HeapFlags, pDesc, InitialResourceState, pOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, HeapProperties*, HeapFlags, ResourceDescription1*, ResourceStates, ClearValue*, ID3D12ProtectedResourceSession*, Guid*, void**, int>)(lpVtbl[69]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pHeapProperties, HeapFlags, pDesc, InitialResourceState, pOptimizedClearValue, pProtectedSession, riidResource, ppvResource);
#endif
	}

	/// <inheritdoc cref="ID3D12Device8.CreatePlacedResource1" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(70)]
	public HResult CreatePlacedResource1(ID3D12Heap* pHeap, ulong HeapOffset, ResourceDescription1* pDesc, ResourceStates InitialState, ClearValue* pOptimizedClearValue, Guid* riid, void** ppvResource)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ID3D12Heap*, ulong, ResourceDescription1*, ResourceStates, ClearValue*, Guid*, void**, int>)(lpVtbl[70]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pHeap, HeapOffset, pDesc, InitialState, pOptimizedClearValue, riid, ppvResource);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ID3D12Heap*, ulong, ResourceDescription1*, ResourceStates, ClearValue*, Guid*, void**, int>)(lpVtbl[70]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pHeap, HeapOffset, pDesc, InitialState, pOptimizedClearValue, riid, ppvResource);
#endif
	}

	/// <inheritdoc cref="ID3D12Device8.CreateSamplerFeedbackUnorderedAccessView" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(71)]
	public void CreateSamplerFeedbackUnorderedAccessView(ID3D12Resource* pTargetedResource, ID3D12Resource* pFeedbackResource, CpuDescriptorHandle DestDescriptor)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<ID3D12Device12*, ID3D12Resource*, ID3D12Resource*, CpuDescriptorHandle, void>)(lpVtbl[71]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pTargetedResource, pFeedbackResource, DestDescriptor);
#else
		((delegate* unmanaged[Stdcall]<ID3D12Device12*, ID3D12Resource*, ID3D12Resource*, CpuDescriptorHandle, void>)(lpVtbl[71]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pTargetedResource, pFeedbackResource, DestDescriptor);
#endif
	}

	/// <inheritdoc cref="ID3D12Device8.GetCopyableFootprints1" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(72)]
	public void GetCopyableFootprints1(ResourceDescription1* pResourceDesc, uint FirstSubresource, uint NumSubresources, ulong BaseOffset, PlacedSubresourceFootprint* pLayouts, uint* pNumRows, ulong* pRowSizeInBytes, ulong* pTotalBytes)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<ID3D12Device12*, ResourceDescription1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(lpVtbl[72]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pResourceDesc, FirstSubresource, NumSubresources, BaseOffset, pLayouts, pNumRows, pRowSizeInBytes, pTotalBytes);
#else
		((delegate* unmanaged[Stdcall]<ID3D12Device12*, ResourceDescription1*, uint, uint, ulong, PlacedSubresourceFootprint*, uint*, ulong*, ulong*, void>)(lpVtbl[72]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pResourceDesc, FirstSubresource, NumSubresources, BaseOffset, pLayouts, pNumRows, pRowSizeInBytes, pTotalBytes);
#endif
	}

	/// <inheritdoc cref="ID3D12Device9.CreateShaderCacheSession" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(73)]
	public HResult CreateShaderCacheSession(ShaderCacheSessionDescription* pDesc, Guid* riid, void** ppvSession)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ShaderCacheSessionDescription*, Guid*, void**, int>)(lpVtbl[73]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppvSession);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ShaderCacheSessionDescription*, Guid*, void**, int>)(lpVtbl[73]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, riid, ppvSession);
#endif
	}

	/// <inheritdoc cref="ID3D12Device9.ShaderCacheControl" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(74)]
	public HResult ShaderCacheControl(ShaderCacheKindFlags Kinds, ShaderCacheControlFlags Control)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ShaderCacheKindFlags, ShaderCacheControlFlags, int>)(lpVtbl[74]))((ID3D12Device12*)Unsafe.AsPointer(ref this), Kinds, Control);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ShaderCacheKindFlags, ShaderCacheControlFlags, int>)(lpVtbl[74]))((ID3D12Device12*)Unsafe.AsPointer(ref this), Kinds, Control);
#endif
	}

	/// <inheritdoc cref="ID3D12Device9.CreateCommandQueue1" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(75)]
	public HResult CreateCommandQueue1(CommandQueueDescription* pDesc, Guid* CreatorID, Guid* riid, void** ppCommandQueue)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, CommandQueueDescription*, Guid*, Guid*, void**, int>)(lpVtbl[75]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, CreatorID, riid, ppCommandQueue);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, CommandQueueDescription*, Guid*, Guid*, void**, int>)(lpVtbl[75]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, CreatorID, riid, ppCommandQueue);
#endif
	}

	/// <inheritdoc cref="ID3D12Device10.CreateCommittedResource3" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(76)]
	public HResult CreateCommittedResource3(HeapProperties* pHeapProperties, HeapFlags HeapFlags, ResourceDescription1* pDesc, BarrierLayout InitialLayout, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, uint NumCastableFormats, Graphics.Dxgi.Common.Format* pCastableFormats, Guid* riidResource, void** ppvResource)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, HeapProperties*, HeapFlags, ResourceDescription1*, BarrierLayout, ClearValue*, ID3D12ProtectedResourceSession*, uint, Graphics.Dxgi.Common.Format*, Guid*, void**, int>)(lpVtbl[76]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pHeapProperties, HeapFlags, pDesc, InitialLayout, pOptimizedClearValue, pProtectedSession, NumCastableFormats, pCastableFormats, riidResource, ppvResource);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, HeapProperties*, HeapFlags, ResourceDescription1*, BarrierLayout, ClearValue*, ID3D12ProtectedResourceSession*, uint, Graphics.Dxgi.Common.Format*, Guid*, void**, int>)(lpVtbl[76]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pHeapProperties, HeapFlags, pDesc, InitialLayout, pOptimizedClearValue, pProtectedSession, NumCastableFormats, pCastableFormats, riidResource, ppvResource);
#endif
	}

	/// <inheritdoc cref="ID3D12Device10.CreatePlacedResource2" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(77)]
	public HResult CreatePlacedResource2(ID3D12Heap* pHeap, ulong HeapOffset, ResourceDescription1* pDesc, BarrierLayout InitialLayout, ClearValue* pOptimizedClearValue, uint NumCastableFormats, Graphics.Dxgi.Common.Format* pCastableFormats, Guid* riid, void** ppvResource)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ID3D12Heap*, ulong, ResourceDescription1*, BarrierLayout, ClearValue*, uint, Graphics.Dxgi.Common.Format*, Guid*, void**, int>)(lpVtbl[77]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pHeap, HeapOffset, pDesc, InitialLayout, pOptimizedClearValue, NumCastableFormats, pCastableFormats, riid, ppvResource);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ID3D12Heap*, ulong, ResourceDescription1*, BarrierLayout, ClearValue*, uint, Graphics.Dxgi.Common.Format*, Guid*, void**, int>)(lpVtbl[77]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pHeap, HeapOffset, pDesc, InitialLayout, pOptimizedClearValue, NumCastableFormats, pCastableFormats, riid, ppvResource);
#endif
	}

	/// <inheritdoc cref="ID3D12Device10.CreateReservedResource2" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(78)]
	public HResult CreateReservedResource2(ResourceDescription* pDesc, BarrierLayout InitialLayout, ClearValue* pOptimizedClearValue, ID3D12ProtectedResourceSession* pProtectedSession, uint NumCastableFormats, Graphics.Dxgi.Common.Format* pCastableFormats, Guid* riid, void** ppvResource)
	{
#if NET6_0_OR_GREATER
		return ((delegate* unmanaged<ID3D12Device12*, ResourceDescription*, BarrierLayout, ClearValue*, ID3D12ProtectedResourceSession*, uint, Graphics.Dxgi.Common.Format*, Guid*, void**, int>)(lpVtbl[78]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, InitialLayout, pOptimizedClearValue, pProtectedSession, NumCastableFormats, pCastableFormats, riid, ppvResource);
#else
		return ((delegate* unmanaged[Stdcall]<ID3D12Device12*, ResourceDescription*, BarrierLayout, ClearValue*, ID3D12ProtectedResourceSession*, uint, Graphics.Dxgi.Common.Format*, Guid*, void**, int>)(lpVtbl[78]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, InitialLayout, pOptimizedClearValue, pProtectedSession, NumCastableFormats, pCastableFormats, riid, ppvResource);
#endif
	}

	/// <inheritdoc cref="ID3D12Device11.CreateSampler2" />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(79)]
	public void CreateSampler2(SamplerDescription2* pDesc, CpuDescriptorHandle DestDescriptor)
	{
#if NET6_0_OR_GREATER
		((delegate* unmanaged<ID3D12Device12*, SamplerDescription2*, CpuDescriptorHandle, void>)(lpVtbl[79]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, DestDescriptor);
#else
		((delegate* unmanaged[Stdcall]<ID3D12Device12*, SamplerDescription2*, CpuDescriptorHandle, void>)(lpVtbl[79]))((ID3D12Device12*)Unsafe.AsPointer(ref this), pDesc, DestDescriptor);
#endif
	}

	/// <include file='../Direct3D12.xml' path='doc/member[@name="ID3D12Device12::GetResourceAllocationInfo3"]/*' />
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[VtblIndex(80)]
	public ResourceAllocationInfo GetResourceAllocationInfo3(uint visibleMask, uint numResourceDescs, ResourceDescription1* pResourceDescs, uint* pNumCastableFormats, Graphics.Dxgi.Common.Format** ppCastableFormats, ResourceAllocationInfo1* pResourceAllocationInfo1)
	{
		ResourceAllocationInfo result;
#if NET6_0_OR_GREATER
		return *((delegate* unmanaged<ID3D12Device12*, ResourceAllocationInfo*, uint, uint, ResourceDescription1*, uint*, Graphics.Dxgi.Common.Format**, ResourceAllocationInfo1*, ResourceAllocationInfo*>)(lpVtbl[80]))((ID3D12Device12*)Unsafe.AsPointer(ref this), &result, visibleMask, numResourceDescs, pResourceDescs, pNumCastableFormats, ppCastableFormats, pResourceAllocationInfo1);
#else
		return *((delegate* unmanaged[Stdcall]<ID3D12Device12*, ResourceAllocationInfo*, uint, uint, ResourceDescription1*, uint*, Graphics.Dxgi.Common.Format**, ResourceAllocationInfo1*, ResourceAllocationInfo*>)(lpVtbl[80]))((ID3D12Device12*)Unsafe.AsPointer(ref this), &result, visibleMask, numResourceDescs, pResourceDescs, pNumCastableFormats, ppCastableFormats, pResourceAllocationInfo1);
#endif
	}

	public interface Interface : ID3D12Device11.Interface
	{
		[VtblIndex(80)]
		ResourceAllocationInfo GetResourceAllocationInfo3(uint visibleMask, uint numResourceDescs, ResourceDescription1* pResourceDescs, uint* pNumCastableFormats, Graphics.Dxgi.Common.Format** ppCastableFormats, ResourceAllocationInfo1* pResourceAllocationInfo1);
	}
}

