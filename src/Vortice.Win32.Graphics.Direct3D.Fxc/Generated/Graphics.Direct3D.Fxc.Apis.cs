// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

namespace Win32.Graphics.Direct3D.Fxc;

public static partial class Apis
{
	public const uint D3D_COMPILER_VERSION = 47;

	public const uint D3D_GET_INST_OFFSETS_INCLUDE_NON_EXECUTABLE = 1;

	public const StripFlags D3DCOMPILER_STRIP_REFLECTION_DATA = StripFlags.ReflectionData;
	public const StripFlags D3DCOMPILER_STRIP_DEBUG_INFO = StripFlags.DebugInfo;
	public const StripFlags D3DCOMPILER_STRIP_TEST_BLOBS = StripFlags.TestBlobs;
	public const StripFlags D3DCOMPILER_STRIP_PRIVATE_DATA = StripFlags.PrivateData;
	public const StripFlags D3DCOMPILER_STRIP_ROOT_SIGNATURE = StripFlags.RootSignature;
	public const BlobPart D3D_BLOB_INPUT_SIGNATURE_BLOB = BlobPart.InputSignatureBlob;
	public const BlobPart D3D_BLOB_OUTPUT_SIGNATURE_BLOB = BlobPart.OutputSignatureBlob;
	public const BlobPart D3D_BLOB_INPUT_AND_OUTPUT_SIGNATURE_BLOB = BlobPart.InputAndOutputSignatureBlob;
	public const BlobPart D3D_BLOB_PATCH_CONSTANT_SIGNATURE_BLOB = BlobPart.PatchConstantSignatureBlob;
	public const BlobPart D3D_BLOB_ALL_SIGNATURE_BLOB = BlobPart.AllSignatureBlob;
	public const BlobPart D3D_BLOB_DEBUG_INFO = BlobPart.DebugInfo;
	public const BlobPart D3D_BLOB_LEGACY_SHADER = BlobPart.LegacyShader;
	public const BlobPart D3D_BLOB_XNA_PREPASS_SHADER = BlobPart.XNAPrepassShader;
	public const BlobPart D3D_BLOB_XNA_SHADER = BlobPart.XNAShader;
	public const BlobPart D3D_BLOB_PDB = BlobPart.Pdb;
	public const BlobPart D3D_BLOB_PRIVATE_DATA = BlobPart.PrivateData;
	public const BlobPart D3D_BLOB_ROOT_SIGNATURE = BlobPart.RootSignature;
	public const BlobPart D3D_BLOB_DEBUG_NAME = BlobPart.DebugName;
	public const BlobPart D3D_BLOB_TEST_ALTERNATE_SHADER = BlobPart.TestAlternateShader;
	public const BlobPart D3D_BLOB_TEST_COMPILE_DETAILS = BlobPart.TestCompileDetails;
	public const BlobPart D3D_BLOB_TEST_COMPILE_PERF = BlobPart.TestCompilePerf;
	public const BlobPart D3D_BLOB_TEST_COMPILE_REPORT = BlobPart.TestCompileReport;
	public const CompileFlags D3DCOMPILE_DEBUG = CompileFlags.Debug;
	public const CompileFlags D3DCOMPILE_SKIP_VALIDATION = CompileFlags.SkipValidation;
	public const CompileFlags D3DCOMPILE_SKIP_OPTIMIZATION = CompileFlags.SkipOptimization;
	public const CompileFlags D3DCOMPILE_PACK_MATRIX_ROW_MAJOR = CompileFlags.PackMatrixRowMajor;
	public const CompileFlags D3DCOMPILE_PACK_MATRIX_COLUMN_MAJOR = CompileFlags.PackMatrixColumnMajor;
	public const CompileFlags D3DCOMPILE_PARTIAL_PRECISION = CompileFlags.PartialPrecision;
	public const CompileFlags D3DCOMPILE_FORCE_VS_SOFTWARE_NO_OPT = CompileFlags.ForceVSSoftwareNoOpt;
	public const CompileFlags D3DCOMPILE_FORCE_PS_SOFTWARE_NO_OPT = CompileFlags.ForcePSSoftwareNoOpt;
	public const CompileFlags D3DCOMPILE_NO_PRESHADER = CompileFlags.NoPreshader;
	public const CompileFlags D3DCOMPILE_AVOID_FLOW_CONTROL = CompileFlags.AvoidFlowControl;
	public const CompileFlags D3DCOMPILE_PREFER_FLOW_CONTROL = CompileFlags.PreferFlowControl;
	public const CompileFlags D3DCOMPILE_ENABLE_STRICTNESS = CompileFlags.EnableStrictness;
	public const CompileFlags D3DCOMPILE_ENABLE_BACKWARDS_COMPATIBILITY = CompileFlags.EnableBackwardsCompatibility;
	public const CompileFlags D3DCOMPILE_IEEE_STRICTNESS = CompileFlags.IeeeStrictness;
	public const CompileFlags D3DCOMPILE_OPTIMIZATION_LEVEL0 = CompileFlags.OptimizationLevel0;
	public const CompileFlags D3DCOMPILE_OPTIMIZATION_LEVEL1 = CompileFlags.OptimizationLevel1;
	public const CompileFlags D3DCOMPILE_OPTIMIZATION_LEVEL2 = CompileFlags.OptimizationLevel2;
	public const CompileFlags D3DCOMPILE_OPTIMIZATION_LEVEL3 = CompileFlags.OptimizationLevel3;
	public const CompileFlags D3DCOMPILE_RESERVED16 = CompileFlags.Reserved16;
	public const CompileFlags D3DCOMPILE_RESERVED17 = CompileFlags.Reserved17;
	public const CompileFlags D3DCOMPILE_WARNINGS_ARE_ERRORS = CompileFlags.WarningsAreErrors;
	public const CompileFlags D3DCOMPILE_RESOURCES_MAY_ALIAS = CompileFlags.ResourcesMayAlias;
	public const CompileFlags D3DCOMPILE_ENABLE_UNBOUNDED_DESCRIPTOR_TABLES = CompileFlags.EnableUnboundedDescriptorTables;
	public const CompileFlags D3DCOMPILE_ALL_RESOURCES_BOUND = CompileFlags.AllResourcesBound;
	public const CompileFlags D3DCOMPILE_DEBUG_NAME_FOR_SOURCE = CompileFlags.DebugNameForSource;
	public const CompileFlags D3DCOMPILE_DEBUG_NAME_FOR_BINARY = CompileFlags.DebugNameForBinary;
	public const CompileEffectFlags D3DCOMPILE_EFFECT_CHILD_EFFECT = CompileEffectFlags.ChildEffect;
	public const CompileEffectFlags D3DCOMPILE_EFFECT_ALLOW_SLOW_OPS = CompileEffectFlags.AllowSlowOps;
	public const CompileFlags2 D3DCOMPILE_FLAGS2_FORCE_ROOT_SIGNATURE_LATEST = CompileFlags2.ForceRootSignatureLatest;
	public const CompileFlags2 D3DCOMPILE_FLAGS2_FORCE_ROOT_SIGNATURE_1_0 = CompileFlags2.ForceRootSignature10;
	public const CompileFlags2 D3DCOMPILE_FLAGS2_FORCE_ROOT_SIGNATURE_1_1 = CompileFlags2.ForceRootSignature11;
	public const CompileSecondaryFlags D3DCOMPILE_SECDATA_MERGE_UAV_SLOTS = CompileSecondaryFlags.MergeUavSlots;
	public const CompileSecondaryFlags D3DCOMPILE_SECDATA_PRESERVE_TEMPLATE_SLOTS = CompileSecondaryFlags.PreserveTemplateSlots;
	public const CompileSecondaryFlags D3DCOMPILE_SECDATA_REQUIRE_TEMPLATE_MATCH = CompileSecondaryFlags.RequireTemplateMatch;
	public const DisasmFlags D3D_DISASM_ENABLE_COLOR_CODE = DisasmFlags.EnableColorCode;
	public const DisasmFlags D3D_DISASM_ENABLE_DEFAULT_VALUE_PRINTS = DisasmFlags.EnableDefaultValuePrints;
	public const DisasmFlags D3D_DISASM_ENABLE_INSTRUCTION_NUMBERING = DisasmFlags.EnableInstructionNumbering;
	public const DisasmFlags D3D_DISASM_ENABLE_INSTRUCTION_CYCLE = DisasmFlags.EnableInstructionCycle;
	public const DisasmFlags D3D_DISASM_DISABLE_DEBUG_INFO = DisasmFlags.DisableDebugInfo;
	public const DisasmFlags D3D_DISASM_ENABLE_INSTRUCTION_OFFSET = DisasmFlags.EnableInstructionOffset;
	public const DisasmFlags D3D_DISASM_INSTRUCTION_ONLY = DisasmFlags.InstructionOnly;
	public const DisasmFlags D3D_DISASM_PRINT_HEX_LITERALS = DisasmFlags.PrintHexLiterals;
	public const CompressShaderFlags D3D_COMPRESS_SHADER_KEEP_ALL_PARTS = CompressShaderFlags.KeepAllParts;
}

